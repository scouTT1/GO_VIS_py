{"version":3,"sources":["../../../src/services/interaction/InteractionService.ts"],"names":["EventEmitter","Hammer","inject","injectable","TYPES","InteractionEvent","DragEventMap","panstart","panmove","panend","pancancel","InteractionService","IMapService","ILogService","hammertime","lastClickTime","lastClickXY","clickTimer","onDrag","target","interactionTarget","interactionEvent","type","emit","Drag","onHammer","srcEvent","stopPropagation","Hover","onTouch","touch","touches","onHover","x","pageX","y","pageY","$containter","mapService","getMapContainer","getBoundingClientRect","top","left","lngLat","containerToLngLat","document","documentElement","isDoubleTap","addEventListenerOnMap","destroy","removeEventListenerOnMap","off","id","Select","featureId","Active","Manager","add","Tap","event","taps","Pan","threshold","pointers","Press","on","addEventListener","logger","debug","removeEventListener","pointerType","clientX","clientY","Math","floor","nowTime","Date","getTime","abs","clearTimeout","setTimeout"],"mappings":"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","sourcesContent":["import EventEmitter from 'eventemitter3';\nimport Hammer from 'hammerjs';\nimport { inject, injectable } from 'inversify';\n// @ts-ignore\nimport { TYPES } from '../../types';\nimport { ILogService } from '../log/ILogService';\nimport { ILngLat, IMapService } from '../map/IMapService';\nimport { IInteractionService, InteractionEvent } from './IInteractionService';\nconst DragEventMap: { [key: string]: string } = {\n  panstart: 'dragstart',\n  panmove: 'dragging',\n  panend: 'dragend',\n  pancancel: 'dragcancle',\n};\n/**\n * 由于目前 L7 与地图结合的方案为双 canvas 而非共享 WebGL Context，事件监听注册在地图底图上。\n * 除此之外，后续如果支持非地图场景，事件监听就需要注册在 L7 canvas 上。\n */\n@injectable()\nexport default class InteractionService extends EventEmitter\n  implements IInteractionService {\n  @inject(TYPES.IMapService)\n  private readonly mapService: IMapService;\n\n  @inject(TYPES.ILogService)\n  private readonly logger: ILogService;\n\n  private hammertime: HammerManager;\n\n  private lastClickTime: number = 0;\n\n  private lastClickXY: number[] = [-1, -1];\n\n  private clickTimer: number;\n\n  public init() {\n    // 注册事件在地图底图上\n    this.addEventListenerOnMap();\n  }\n\n  public destroy() {\n    if (this.hammertime) {\n      this.hammertime.destroy();\n    }\n    this.removeEventListenerOnMap();\n    this.off(InteractionEvent.Hover);\n  }\n\n  public triggerHover({ x, y }: { x: number; y: number }) {\n    this.emit(InteractionEvent.Hover, { x, y });\n  }\n  public triggerSelect(id: number): void {\n    this.emit(InteractionEvent.Select, { featureId: id });\n  }\n\n  public triggerActive(id: number): void {\n    this.emit(InteractionEvent.Active, { featureId: id });\n  }\n\n  private addEventListenerOnMap() {\n    const $containter = this.mapService.getMapContainer();\n    if ($containter) {\n      const hammertime = new Hammer.Manager($containter);\n      hammertime.add(\n        new Hammer.Tap({\n          event: 'dblclick',\n          taps: 2,\n        }),\n      );\n      hammertime.add(\n        new Hammer.Tap({\n          event: 'click',\n        }),\n      );\n      hammertime.add(new Hammer.Pan({ threshold: 0, pointers: 0 }));\n      hammertime.add(new Hammer.Press({}));\n      // hammertime.get('pan').set({ direction: Hammer.DIRECTION_ALL });\n      // hammertime.get('pinch').set({ enable: true });\n      hammertime.on('dblclick click', this.onHammer);\n      hammertime.on('panstart panmove panend pancancel', this.onDrag);\n      // hammertime.on('press pressup', this.onHammer);\n      // $containter.addEventListener('touchstart', this.onTouch);\n      $containter.addEventListener('mousemove', this.onHover);\n      // $containter.addEventListener('click', this.onHover);\n      $containter.addEventListener('mousedown', this.onHover);\n      $containter.addEventListener('mouseup', this.onHover);\n      $containter.addEventListener('contextmenu', this.onHover);\n\n      this.hammertime = hammertime;\n\n      // TODO: 根据场景注册事件到 L7 canvas 上\n      this.logger.debug('add event listeners on canvas');\n    }\n  }\n  private removeEventListenerOnMap() {\n    const $containter = this.mapService.getMapContainer();\n    if ($containter) {\n      $containter.removeEventListener('mousemove', this.onHover);\n      // this.hammertime.off('dblclick click', this.onHammer);\n      this.hammertime.off('panstart panmove panend pancancel', this.onDrag);\n      // $containter.removeEventListener('touchstart', this.onTouch);\n      // $containter.removeEventListener('click', this.onHover);\n      $containter.removeEventListener('mousedown', this.onHover);\n      $containter.removeEventListener('mouseup', this.onHover);\n      // $containter.removeEventListener('dblclick', this.onHover);\n      $containter.removeEventListener('contextmenu', this.onHover);\n    }\n  }\n  private onDrag = (target: HammerInput) => {\n    const interactionTarget = this.interactionEvent(target);\n    interactionTarget.type = DragEventMap[interactionTarget.type];\n    this.emit(InteractionEvent.Drag, interactionTarget);\n  };\n  private onHammer = (target: HammerInput) => {\n    target.srcEvent.stopPropagation();\n    const interactionTarget = this.interactionEvent(target);\n    this.emit(InteractionEvent.Hover, interactionTarget);\n  };\n  private onTouch = (target: TouchEvent) => {\n    const touch = target.touches[0];\n    // @ts-ignore\n    this.onHover({\n      x: touch.pageX,\n      y: touch.pageY,\n      type: 'touch',\n    });\n  };\n\n  private interactionEvent(target: HammerInput) {\n    const { type, pointerType } = target;\n    let clientX;\n    let clientY;\n    if (pointerType === 'touch') {\n      clientY = Math.floor(target.pointers[0].clientY);\n      clientX = Math.floor(target.pointers[0].clientX);\n    } else {\n      clientY = Math.floor((target.srcEvent as MouseEvent).y);\n      clientX = Math.floor((target.srcEvent as MouseEvent).x);\n    }\n\n    const $containter = this.mapService.getMapContainer();\n    if ($containter) {\n      const { top, left } = $containter.getBoundingClientRect();\n      clientX -= left;\n      clientY -= top;\n    }\n    const lngLat = this.mapService.containerToLngLat([clientX, clientY]);\n    return { x: clientX, y: clientY, lngLat, type };\n  }\n  private onHover = ({ x, y, type }: MouseEvent) => {\n    const $containter = this.mapService.getMapContainer();\n    if ($containter) {\n      const { top, left } = $containter.getBoundingClientRect();\n      x -= left;\n      y -= top;\n    }\n    const lngLat = this.mapService.containerToLngLat([x, y]);\n\n    if (type === 'click') {\n      if ('ontouchstart' in document.documentElement === true) {\n        return;\n      }\n      this.isDoubleTap(x, y, lngLat);\n      return;\n    }\n    if (type === 'touch') {\n      this.isDoubleTap(x, y, lngLat);\n      return;\n    }\n    if (type !== 'click' && type !== 'dblclick') {\n      this.emit(InteractionEvent.Hover, {\n        x,\n        y,\n        lngLat,\n        type,\n      });\n    }\n  };\n\n  private isDoubleTap(x: number, y: number, lngLat: ILngLat) {\n    const nowTime = new Date().getTime();\n    let type = 'click';\n    if (\n      nowTime - this.lastClickTime < 400 &&\n      Math.abs(this.lastClickXY[0] - x) < 10 &&\n      Math.abs(this.lastClickXY[1] - y) < 10\n    ) {\n      this.lastClickTime = 0;\n      this.lastClickXY = [-1, -1];\n      if (this.clickTimer) {\n        clearTimeout(this.clickTimer);\n      }\n      type = 'dblclick';\n      this.emit(InteractionEvent.Hover, { x, y, lngLat, type });\n    } else {\n      this.lastClickTime = nowTime;\n      this.lastClickXY = [x, y];\n      // @ts-ignore\n      this.clickTimer = setTimeout(() => {\n        type = 'click';\n        this.emit(InteractionEvent.Hover, { x, y, lngLat, type });\n      }, 400);\n    }\n  }\n}\n"],"file":"InteractionService.js"}