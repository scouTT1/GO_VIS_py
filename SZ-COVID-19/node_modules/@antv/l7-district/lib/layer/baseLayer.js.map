{"version":3,"sources":["../../src/layer/baseLayer.ts"],"names":["mergeCustomizer","objValue","srcValue","Array","isArray","BaseLayer","scene","option","fillLayer","lineLayer","labelLayer","bubbleLayer","options","layers","fillData","popup","getDefaultOption","geoDataLevel","forEach","layer","removeLayer","length","show","hide","newOption","newData","joinByField","setOption","data","joinBy","setData","transforms","type","sourceField","targetField","fetch","url","arrayBuffer","buffer","geojson","geobuf","decode","Pbf","json","zIndex","depth","adcode","label","enable","color","field","size","stroke","strokeWidth","textAllowOverlap","opacity","bubble","shape","style","fill","scale","activeColor","autoFit","cityStroke","cityStrokeWidth","countyStrokeWidth","provinceStrokeWidth","provinceStroke","countyStroke","coastlineStroke","coastlineWidth","nationalStroke","nationalWidth","chinaNationalStroke","chinaNationalWidth","openTriggerEvent","closeTriggerEvent","Html","properties","name","fillCountry","PolygonLayer","source","setLayerAttribute","active","push","addLayer","labeldata","features","map","feature","center","x","y","addBubbleLayer","addPopup","emit","provinceLine","layer2","LineLayer","labelData","addLabel","PointLayer","parser","coordinates","popupLayer","triggerLayer","on","e","html","Popup","closeButton","setLnglat","lngLat","setHTML","remove","attr","values","EventEmitter"],"mappings":"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","sourcesContent":["import {\n  ILayer,\n  IPopup,\n  LineLayer,\n  PointLayer,\n  PolygonLayer,\n  Popup,\n  Scene,\n  StyleAttrField,\n} from '@antv/l7';\nimport { EventEmitter } from 'eventemitter3';\n// @ts-ignore\nimport geobuf from 'geobuf';\n// tslint:disable-next-line: no-submodule-imports\nimport isObject from 'lodash/isObject';\n// tslint:disable-next-line: no-submodule-imports\nimport mergeWith from 'lodash/mergeWith';\n// @ts-ignore\nimport Pbf from 'pbf';\nimport { setDataLevel } from '../config';\nimport { AttributeType, IDistrictLayerOption } from './interface';\n\nfunction mergeCustomizer(objValue: any, srcValue: any) {\n  if (Array.isArray(srcValue)) {\n    return srcValue;\n  }\n}\nexport default class BaseLayer extends EventEmitter {\n  public fillLayer: ILayer;\n  public lineLayer: ILayer;\n  public labelLayer: ILayer;\n  public bubbleLayer: ILayer;\n  protected scene: Scene;\n  protected options: IDistrictLayerOption;\n  protected layers: ILayer[] = [];\n  protected fillData: any;\n  private popup: IPopup;\n\n  constructor(scene: Scene, option: Partial<IDistrictLayerOption> = {}) {\n    super();\n    this.scene = scene;\n    this.options = mergeWith(this.getDefaultOption(), option, mergeCustomizer);\n    setDataLevel(this.options.geoDataLevel);\n  }\n\n  public destroy() {\n    this.layers.forEach((layer) => this.scene.removeLayer(layer));\n    this.layers.length = 0;\n  }\n\n  public show() {\n    this.layers.forEach((layer) => layer.show());\n  }\n  public hide() {\n    this.layers.forEach((layer) => layer.hide());\n  }\n\n  public setOption(newOption: { [key: string]: any }) {\n    this.options = mergeWith(this.options, newOption);\n  }\n\n  public updateData(\n    newData: Array<{ [key: string]: any }>,\n    joinByField?: [string, string],\n  ) {\n    this.setOption({\n      data: newData,\n      joinBy: joinByField,\n    });\n    const { data = [], joinBy } = this.options;\n    this.fillLayer.setData(this.fillData, {\n      transforms:\n        data.length === 0\n          ? []\n          : [\n              {\n                type: 'join',\n                sourceField: joinBy[1], // data1 对应字段名\n                targetField: joinBy[0], // data 对应字段名 绑定到的地理数据\n                data,\n              },\n            ],\n    });\n  }\n  protected async fetchData(data: { url: any; type: string }) {\n    if (data.type === 'pbf') {\n      const buffer = await (await fetch(data.url)).arrayBuffer();\n      const geojson = geobuf.decode(new Pbf(buffer));\n      return geojson;\n    } else {\n      return isObject(data.url) ? data.url : (await fetch(data.url)).json();\n    }\n  }\n  protected getDefaultOption(): IDistrictLayerOption {\n    return {\n      zIndex: 0,\n      geoDataLevel: 2,\n      depth: 1,\n      adcode: [],\n      joinBy: ['name', 'name'],\n      label: {\n        enable: true,\n        color: '#000',\n        field: 'name',\n        size: 8,\n        stroke: '#fff',\n        strokeWidth: 2,\n        textAllowOverlap: true,\n        opacity: 1,\n      },\n      bubble: {\n        enable: false,\n        shape: 'circle',\n        color: '#1AA9FF',\n        size: 15,\n        style: {\n          opacity: 1,\n          stroke: '#fff',\n          strokeWidth: 1,\n        },\n      },\n      fill: {\n        scale: null,\n        color: '#ddd',\n        style: {\n          opacity: 1.0,\n        },\n        activeColor: 'rgba(0,0,255,0.3)',\n      },\n      autoFit: true,\n      stroke: '#bdbdbd',\n      strokeWidth: 0.6,\n      cityStroke: '#636363',\n      cityStrokeWidth: 0.6,\n      countyStrokeWidth: 0.6,\n      provinceStrokeWidth: 0.6,\n      provinceStroke: '#f0f0f0',\n      countyStroke: '#525252',\n      coastlineStroke: '#4190da',\n      coastlineWidth: 0.6,\n      nationalStroke: '#c994c7',\n      nationalWidth: 0.5,\n      chinaNationalStroke: 'gray',\n      chinaNationalWidth: 1,\n      popup: {\n        enable: true,\n        openTriggerEvent: 'mousemove',\n        closeTriggerEvent: 'mouseout',\n        option: {},\n        Html: (properties: any) => {\n          return `${properties.name}`;\n        },\n      },\n    };\n  }\n\n  protected addFillLayer(fillCountry: any) {\n    // 添加省份填充\n    const { popup, data = [], fill, autoFit, joinBy } = this.options;\n    this.fillData = fillCountry;\n    const fillLayer = new PolygonLayer({\n      autoFit,\n    }).source(fillCountry, {\n      transforms:\n        data.length === 0\n          ? []\n          : [\n              {\n                type: 'join',\n                sourceField: joinBy[1], // data1 对应字段名\n                targetField: joinBy[0], // data 对应字段名 绑定到的地理数据\n                data,\n              },\n            ],\n    });\n    this.setLayerAttribute(fillLayer, 'color', fill.color as AttributeType);\n    if (fill.scale && isObject(fill.color)) {\n      fillLayer.scale('color', {\n        type: fill.scale,\n        field: fill.color.field as string,\n      });\n    }\n    fillLayer\n      .shape('fill')\n      .active({\n        color: fill.activeColor as string,\n      })\n      .style(fill.style);\n    this.fillLayer = fillLayer;\n    this.layers.push(fillLayer);\n    this.scene.addLayer(fillLayer);\n    if (this.options.bubble && this.options.bubble?.enable !== false) {\n      const labeldata = fillCountry.features.map((feature: any) => {\n        return {\n          ...feature.properties,\n          center: [feature.properties.x, feature.properties.y],\n        };\n      });\n      this.addBubbleLayer(labeldata);\n    }\n    if (popup.enable) {\n      this.addPopup();\n    }\n\n    this.emit('loaded');\n  }\n\n  protected addFillLine(provinceLine: any) {\n    const { stroke, strokeWidth, zIndex } = this.options;\n    const layer2 = new LineLayer({\n      zIndex: zIndex + 0.1,\n    })\n      .source(provinceLine)\n      .color(stroke)\n      .size(strokeWidth)\n      .style({\n        opacity: 1,\n      });\n    this.scene.addLayer(layer2);\n    this.layers.push(layer2);\n    this.lineLayer = layer2;\n  }\n\n  protected addLabelLayer(labelData: any, type: string = 'json') {\n    const labelLayer = this.addLabel(labelData, type);\n    this.scene.addLayer(labelLayer);\n    this.layers.push(labelLayer);\n    this.labelLayer = labelLayer;\n  }\n\n  protected addBubbleLayer(labelData: any, type: string = 'json') {\n    const { bubble, zIndex, data = [], joinBy } = this.options;\n    const bubbleLayer = new PointLayer({\n      zIndex: zIndex + 0.3,\n    }).source(labelData, {\n      parser: {\n        type,\n        coordinates: 'center',\n      },\n      transforms:\n        data.length === 0\n          ? []\n          : [\n              {\n                type: 'join',\n                sourceField: joinBy[1], // data1 对应字段名\n                targetField: joinBy[0], // data 对应字段名 绑定到的地理数据\n                data,\n              },\n            ],\n    });\n    this.setLayerAttribute(bubbleLayer, 'color', bubble.color as AttributeType);\n    this.setLayerAttribute(bubbleLayer, 'size', bubble.size as AttributeType);\n    this.setLayerAttribute(bubbleLayer, 'shape', bubble.shape as AttributeType);\n    if (bubble.scale) {\n      bubbleLayer.scale(bubble.scale.field, {\n        type: bubble.scale.type,\n      });\n    }\n    bubbleLayer.style(bubble.style);\n    this.scene.addLayer(bubbleLayer);\n    this.layers.push(bubbleLayer);\n    this.bubbleLayer = bubbleLayer;\n    return bubbleLayer;\n  }\n\n  protected addLabel(labelData: any, type: string = 'json') {\n    const { label, zIndex } = this.options;\n    const labelLayer = new PointLayer({\n      zIndex: zIndex + 0.4,\n    })\n      .source(labelData, {\n        parser: {\n          type,\n          coordinates: 'center',\n        },\n      })\n      .color(label.color as StyleAttrField)\n      .shape(label.field as StyleAttrField, 'text')\n      .size(10)\n      .style({\n        opacity: label.opacity,\n        stroke: label.stroke,\n        strokeWidth: label.strokeWidth,\n        textAllowOverlap: label.textAllowOverlap,\n      });\n    return labelLayer;\n  }\n\n  protected addPopup() {\n    const { popup } = this.options;\n    let popupLayer;\n    if (popup.triggerLayer) {\n      popupLayer =\n        popup.triggerLayer === 'bubble' ? this.bubbleLayer : this.fillLayer;\n    } else {\n      popupLayer = this.options.bubble.enable\n        ? this.bubbleLayer\n        : this.fillLayer;\n    }\n    popupLayer.on(popup.openTriggerEvent as string, (e) => {\n      const html = popup.Html\n        ? popup.Html(e.feature.properties ? e.feature.properties : e.feature)\n        : '';\n      this.popup = new Popup({\n        closeButton: false,\n        ...popup.option,\n      })\n        .setLnglat(e.lngLat)\n        .setHTML(html);\n      this.scene.addPopup(this.popup);\n    });\n\n    popupLayer.on(popup.closeTriggerEvent as string, (e) => {\n      this.popup.remove();\n    });\n  }\n\n  private setLayerAttribute(\n    layer: ILayer,\n    type: 'color' | 'size' | 'shape',\n    attr: AttributeType,\n  ) {\n    if (isObject(attr)) {\n      layer[type](attr.field, attr.values);\n    } else {\n      layer[type](attr);\n    }\n  }\n}\n"],"file":"baseLayer.js"}