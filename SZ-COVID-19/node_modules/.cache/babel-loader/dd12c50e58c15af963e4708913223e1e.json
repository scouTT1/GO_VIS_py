{"remainingRequest":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/babel-loader/lib/index.js!/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/yujiahao/Downloads/visual_work/SZ-COVID-19/src/page/comparison/components/scatter.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/src/page/comparison/components/scatter.vue","mtime":1617781942000},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/cache-loader/dist/cjs.js","mtime":1617788517390},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/babel-loader/lib/index.js","mtime":1617788517170},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/cache-loader/dist/cjs.js","mtime":1617788517390},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/vue-loader/lib/index.js","mtime":1617788568833}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKLy8KLy8KLy8KLy8KaW1wb3J0IGVjaGFydHMgZnJvbSAnZWNoYXJ0cy9saWIvZWNoYXJ0cyc7CmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7CmltcG9ydCAnZWNoYXJ0cy9saWIvY2hhcnQvc2NhdHRlcic7CmltcG9ydCB7IHNjYWxlTGluZWFyIH0gZnJvbSAnZDMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1NjYXR0ZXInLAogIHByb3BzOiBbJ2RhdGEnLCAnaWQnLCAnZXh0ZW50J10sCiAgbWV0aG9kczogewogICAgaW5pdE1hcDogZnVuY3Rpb24gaW5pdE1hcCgpIHsKICAgICAgdmFyIHVzZURhdGEgPSBfLmNoYWluKHRoaXMuZGF0YSkubWFwKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIFtkLnRpbWUsIGQuYWRkQ291bnRdOwogICAgICB9KS5yZXZlcnNlKCkuY2h1bmsoMykubWFwKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIFsiIi5jb25jYXQoZFswXVswXSwgIi0iKS5jb25jYXQoXy5sYXN0KGQpWzBdKSwgXy5zdW1CeShkLCBmdW5jdGlvbiAoZDEpIHsKICAgICAgICAgIHJldHVybiBkMVsxXTsKICAgICAgICB9KV07CiAgICAgIH0pLnZhbHVlKCk7CgogICAgICB2YXIgc2NhbGUgPSBzY2FsZUxpbmVhcigpLmRvbWFpbih0aGlzLmV4dGVudCkucmFuZ2UoWzIsIDIwXSk7CiAgICAgIHZhciBvcHRpb24gPSB7CiAgICAgICAgc2luZ2xlQXhpczogewogICAgICAgICAgaGVpZ2h0OiAwLAogICAgICAgICAgbGVmdDogMjUsCiAgICAgICAgICB0b3A6IDIwLAogICAgICAgICAgdHlwZTogJ2NhdGVnb3J5JywKICAgICAgICAgIGJvdW5kYXJ5R2FwOiB0cnVlLAogICAgICAgICAgZGF0YTogdXNlRGF0YS5tYXAoZnVuY3Rpb24gKGQpIHsKICAgICAgICAgICAgcmV0dXJuIGRbMF07CiAgICAgICAgICB9KSwKICAgICAgICAgIGF4aXNMYWJlbDogewogICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNUaWNrOiB7CiAgICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgICB9LAogICAgICAgICAgc3BsaXRMaW5lOiB7CiAgICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgICB9LAogICAgICAgICAgYXhpc0xpbmU6IHsKICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgdHlwZTogJ2RvdHRlZCcsCiAgICAgICAgICAgICAgY29sb3I6ICdncmF5JwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICBjb25maW5lOiB0cnVlLAogICAgICAgICAgZm9ybWF0dGVyOiBmdW5jdGlvbiBmb3JtYXR0ZXIoX3JlZikgewogICAgICAgICAgICB2YXIgZGF0YSA9IF9yZWYuZGF0YTsKICAgICAgICAgICAgcmV0dXJuICIiLmNvbmNhdChkYXRhWzBdLCAiPGJyIC8+XHU2NUIwXHU1ODlFXHU3ODZFXHU4QkNBXHU0RUJBXHU2NTcwXHVGRjFBIikuY29uY2F0KGRhdGFbMV0pOwogICAgICAgICAgfSwKICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMzIsIDU3LCAxMTIsIC43KScKICAgICAgICB9LAogICAgICAgIHNlcmllczogewogICAgICAgICAgc2luZ2xlQXhpc0luZGV4OiAwLAogICAgICAgICAgY29vcmRpbmF0ZVN5c3RlbTogJ3NpbmdsZUF4aXMnLAogICAgICAgICAgdHlwZTogJ3NjYXR0ZXInLAogICAgICAgICAgZGF0YTogdXNlRGF0YSwKICAgICAgICAgIHN5bWJvbFNpemU6IGZ1bmN0aW9uIHN5bWJvbFNpemUoZGF0YUl0ZW0pIHsKICAgICAgICAgICAgcmV0dXJuIGRhdGFJdGVtWzFdID8gc2NhbGUoZGF0YUl0ZW1bMV0pIDogMDsKICAgICAgICAgIH0sCiAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgbm9ybWFsOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjYzIzZTMyJwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9OwogICAgICB2YXIgbXlDaGFydCA9IGVjaGFydHMuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmlkKSk7CiAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKG9wdGlvbik7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgc2V0VGltZW91dCh0aGlzLmluaXRNYXApOwogIH0KfTs="},{"version":3,"sources":["scatter.vue"],"names":[],"mappings":";;;;;;AAKA,OAAA,OAAA,MAAA,qBAAA;AACA,OAAA,CAAA,MAAA,QAAA;AACA,OAAA,2BAAA;AACA,SAAA,WAAA,QAAA,IAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,KAAA,EAAA,CAAA,MAAA,EAAA,IAAA,EAAA,QAAA,CAFA;AAGA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,UAAA,OAAA,GAAA,CAAA,CAAA,KAAA,CAAA,KAAA,IAAA,EACA,GADA,CACA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,QAAA,CAAA;AAAA,OADA,EAEA,OAFA,GAGA,KAHA,CAGA,CAHA,EAIA,GAJA,CAIA,UAAA,CAAA,EAAA;AACA,eAAA,WAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,cAAA,CAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,GAAA,CAAA,CAAA,KAAA,CAAA,CAAA,EAAA,UAAA,EAAA;AAAA,iBAAA,EAAA,CAAA,CAAA,CAAA;AAAA,SAAA,CAAA,CAAA;AACA,OANA,EAOA,KAPA,EAAA;;AASA,UAAA,KAAA,GAAA,WAAA,GACA,MADA,CACA,KAAA,MADA,EAEA,KAFA,CAEA,CAAA,CAAA,EAAA,EAAA,CAFA,CAAA;AAIA,UAAA,MAAA,GAAA;AACA,QAAA,UAAA,EAAA;AACA,UAAA,MAAA,EAAA,CADA;AAEA,UAAA,IAAA,EAAA,EAFA;AAGA,UAAA,GAAA,EAAA,EAHA;AAIA,UAAA,IAAA,EAAA,UAJA;AAKA,UAAA,WAAA,EAAA,IALA;AAMA,UAAA,IAAA,EAAA,OAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,mBAAA,CAAA,CAAA,CAAA,CAAA;AAAA,WAAA,CANA;AAOA,UAAA,SAAA,EAAA;AACA,YAAA,IAAA,EAAA;AADA,WAPA;AAUA,UAAA,QAAA,EAAA;AACA,YAAA,IAAA,EAAA;AADA,WAVA;AAaA,UAAA,SAAA,EAAA;AACA,YAAA,IAAA,EAAA;AADA,WAbA;AAgBA,UAAA,QAAA,EAAA;AACA,YAAA,SAAA,EAAA;AACA,cAAA,IAAA,EAAA,QADA;AAEA,cAAA,KAAA,EAAA;AAFA;AADA;AAhBA,SADA;AAwBA,QAAA,OAAA,EAAA;AACA,UAAA,OAAA,EAAA,IADA;AAEA,UAAA,SAAA,EAAA,yBAAA;AAAA,gBAAA,IAAA,QAAA,IAAA;AACA,6BAAA,IAAA,CAAA,CAAA,CAAA,6DAAA,IAAA,CAAA,CAAA,CAAA;AACA,WAJA;AAKA,UAAA,eAAA,EAAA;AALA,SAxBA;AA+BA,QAAA,MAAA,EAAA;AACA,UAAA,eAAA,EAAA,CADA;AAEA,UAAA,gBAAA,EAAA,YAFA;AAGA,UAAA,IAAA,EAAA,SAHA;AAIA,UAAA,IAAA,EAAA,OAJA;AAKA,UAAA,UAAA,EAAA,oBAAA,QAAA,EAAA;AACA,mBAAA,QAAA,CAAA,CAAA,CAAA,GAAA,KAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA;AACA,WAPA;AAQA,UAAA,SAAA,EAAA;AACA,YAAA,MAAA,EAAA;AACA,cAAA,KAAA,EAAA;AADA;AADA;AARA;AA/BA,OAAA;AA8CA,UAAA,OAAA,GAAA,OAAA,CAAA,IAAA,CAAA,QAAA,CAAA,cAAA,CAAA,KAAA,EAAA,CAAA,CAAA;AACA,MAAA,OAAA,CAAA,SAAA,CAAA,MAAA;AACA;AA/DA,GAHA;AAoEA,EAAA,OApEA,qBAoEA;AACA,IAAA,UAAA,CAAA,KAAA,OAAA,CAAA;AACA;AAtEA,CAAA","sourcesContent":["<template>\n    <div :id=\"id\" class=\"scatterChart\"></div>\n</template>\n\n<script>\n    import echarts from 'echarts/lib/echarts';\n    import _ from 'lodash';\n    import 'echarts/lib/chart/scatter'\n    import { scaleLinear } from 'd3'\n    \n    export default {\n        name: 'Scatter',\n        props: ['data', 'id', 'extent'],\n        methods: {\n            initMap() {\n                const useData = _.chain(this.data)\n                    .map(d => [d.time, d.addCount])\n                    .reverse()\n                    .chunk(3)\n                    .map(d => {\n                        return [`${d[0][0]}-${_.last(d)[0]}`, _.sumBy(d, d1 => d1[1])] \n                    })\n                    .value();\n\n                const scale = scaleLinear()\n                    .domain(this.extent)\n                    .range([2, 20])\n\n                const option = {\n                    singleAxis: {\n                        height: 0,\n                        left: 25,\n                        top: 20,\n                        type: 'category',\n                        boundaryGap: true,\n                        data: useData.map(d => d[0]),\n                        axisLabel: {\n                            show: false,\n                        },\n                        axisTick: {\n                            show: false,\n                        },\n                        splitLine: {\n                            show: false  \n                        },\n                        axisLine: {\n                            lineStyle: {\n                                 type: 'dotted',\n                                 color: 'gray'\n                            },\n                        }\n                    },\n                    tooltip: {\n                        confine: true,\n                        formatter: ({data}) => {\n                            return `${data[0]}<br />新增确诊人数：${data[1]}`\n                        },\n                        backgroundColor: 'rgba(32, 57, 112, .7)'\n                    },\n                    series: {\n                        singleAxisIndex: 0,\n                        coordinateSystem: 'singleAxis',\n                        type: 'scatter',\n                        data: useData,\n                        symbolSize:  function(dataItem) {\n                            return dataItem[1] ? scale(dataItem[1]) : 0\n                        },\n                        itemStyle: {\n                            normal: {\n                                color: '#c23e32'\n                            }\n                        }\n                    }\n                };\n                const myChart = echarts.init(document.getElementById(this.id));\n                myChart.setOption(option);\n            }\n        },\n        mounted() {\n            setTimeout(this.initMap)\n        }\n    }\n</script>\n\n<style lang=\"less\" scoped>\n    .scatterChart{\n        height: 40px;\n        width: 100%;\n    }\n</style>"],"sourceRoot":"src/page/comparison/components"}]}