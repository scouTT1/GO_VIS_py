{"remainingRequest":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/babel-loader/lib/index.js!/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/yujiahao/Downloads/visual_work/SZ-COVID-19/src/page/comparison/components/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/src/page/comparison/components/list.vue","mtime":1617781942000},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/cache-loader/dist/cjs.js","mtime":1617788517390},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/babel-loader/lib/index.js","mtime":1617788517170},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/cache-loader/dist/cjs.js","mtime":1617788517390},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/vue-loader/lib/index.js","mtime":1617788568833}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmxhdCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnJlZHVjZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnVuc2NvcGFibGVzLmZsYXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7CmltcG9ydCBQYXJ0SlNPTiBmcm9tICdAL2RhdGEvcGFydCc7CmltcG9ydCBTY2F0dGVyIGZyb20gJy4vc2NhdHRlcic7CmltcG9ydCB7IGV4dGVudCB9IGZyb20gJ2QzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdMaXN0JywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGF0YTogW10sCiAgICAgIGhlaWdodDogMjAwCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgaW5pdERhdGE6IGZ1bmN0aW9uIGluaXREYXRhKCkgewogICAgICB2YXIgaCA9IHRoaXMuJGNyZWF0ZUVsZW1lbnQ7CiAgICAgIHZhciBuYW1lT2JqID0gewogICAgICAgIG5zOiAn5Y2X5bGxJywKICAgICAgICBnbTogJ+WFieaYjicsCiAgICAgICAgZHA6ICflpKfpuY8nLAogICAgICAgIGZ0OiAn56aP55SwJywKICAgICAgICBsZzogJ+m+meWylycsCiAgICAgICAgeXQ6ICfnm5DnlLAnLAogICAgICAgIGJhOiAn5a6d5a6JJywKICAgICAgICBwczogJ+WdquWxsScsCiAgICAgICAgbGhfdTogJ+e9l+a5licsCiAgICAgICAgbGhfdWE6ICfpvpnljY4nLAogICAgICAgIHF0OiAn5YW25LuWJwogICAgICB9OwoKICAgICAgdmFyIGZpbmFsID0gXy5jaGFpbihuYW1lT2JqKS5rZXlzKCkucmVkdWNlKGZ1bmN0aW9uIChvYmosIGQpIHsKICAgICAgICB2YXIgZGF0YUFyciA9IFBhcnRKU09OLmZpbHRlcihmdW5jdGlvbiAoZCkgewogICAgICAgICAgcmV0dXJuIGQuanpzaiA9PT0gJzI05pe2JzsKICAgICAgICB9KS5tYXAoZnVuY3Rpb24gKGQxLCBpLCBhcnIpIHsKICAgICAgICAgIHZhciBhZGRDb3VudCA9IGkgPT09IGFyci5sZW5ndGggLSAxID8gTnVtYmVyKGQxW2RdKSA6IE51bWJlcihkMVtkXSkgLSBOdW1iZXIoYXJyW2kgKyAxXVtkXSk7CiAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICBhZGRDb3VudDogYWRkQ291bnQsCiAgICAgICAgICAgIGNvdW50OiBOdW1iZXIoZDFbZF0pLAogICAgICAgICAgICB0aW1lOiBkMS5qenJxCiAgICAgICAgICB9OwogICAgICAgIH0pOwogICAgICAgIG9ialtkXSA9IHsKICAgICAgICAgIG5hbWU6IG5hbWVPYmpbZF0sCiAgICAgICAgICBkYXRhOiBkYXRhQXJyLAogICAgICAgICAgaWQ6IGQsCiAgICAgICAgICBhY2M6IGRhdGFBcnJbMF0uY291bnQsCiAgICAgICAgICBub3c6IDAKICAgICAgICB9OwogICAgICAgIHJldHVybiBvYmo7CiAgICAgIH0sIHt9KS52YWx1ZXMoKS52YWx1ZSgpOwoKICAgICAgdmFyIGRhdGFBcnIgPSBmaW5hbC5tYXAoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZC5kYXRhOwogICAgICB9KS5mbGF0KCkubWFwKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQuYWRkQ291bnQ7CiAgICAgIH0pOwoKICAgICAgXy5mb3JJbihmaW5hbCwgZnVuY3Rpb24gKGQpIHsKICAgICAgICBkLmNoYXJ0ID0gaChTY2F0dGVyLCB7CiAgICAgICAgICAiYXR0cnMiOiB7CiAgICAgICAgICAgICJkYXRhIjogZC5kYXRhLAogICAgICAgICAgICAiZXh0ZW50IjogZXh0ZW50KGRhdGFBcnIpLAogICAgICAgICAgICAiaWQiOiBkLmlkCiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0pOwoKICAgICAgdGhpcy5kYXRhID0gZmluYWw7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgIF90aGlzLmhlaWdodCA9IF90aGlzLiRyZWZzLmNvbnRhaW5lci5vZmZzZXRIZWlnaHQ7CiAgICB9KTsKICAgIHRoaXMuaW5pdERhdGEoKTsKICB9Cn07"},{"version":3,"sources":["list.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"table-container\" ref=\"container\">\n        <el-table\n            :data=\"data\"\n            :height=\"height\"\n        >\n            <el-table-column\n                prop=\"name\"\n                label=\"地区\"\n                min-width=\"15%\"\n            />\n            <el-table-column\n                prop=\"now\"\n                label=\"现有\"\n                min-width=\"15%\"\n            />\n            <el-table-column\n                prop=\"acc\"\n                label=\"累计\"\n                min-width=\"15%\"\n            />\n            <el-table-column\n                prop=\"chart\"\n                label=\"趋势\"\n                min-width=\"50%\"\n                class-name=\"scatter-chart\"\n            />\n        </el-table>\n    </div>\n    \n</template>\n\n<script>\n    import _ from 'lodash'\n    import PartJSON from '@/data/part'\n    import Scatter from './scatter'\n    import { extent } from 'd3'\n\n    export default {\n        name: 'List',\n        data() {\n            return {\n                data: [],\n                height: 200,\n            }\n        },\n        methods: {\n            initData() {\n                const nameObj = {\n                    ns: '南山',\n                    gm: '光明',\n                    dp: '大鹏',\n                    ft: '福田',\n                    lg: '龙岗',\n                    yt: '盐田',\n                    ba: '宝安',\n                    ps: '坪山',\n                    lh_u: '罗湖', \n                    lh_ua: '龙华',\n                    qt: '其他',\n                }\n\n                const final = _.chain(nameObj)\n                    .keys()\n                    .reduce((obj, d) => {\n                        const dataArr = PartJSON.filter(d => d.jzsj === '24时')\n                        .map((d1, i, arr) => {\n                            const addCount = i === arr.length - 1\n                                ? Number(d1[d])\n                                : Number(d1[d]) - Number(arr[i + 1][d]);\n\n                            return {\n                                addCount,\n                                count: Number(d1[d]),\n                                time: d1.jzrq,\n                            }\n                        });\n                        obj[d] = {\n                            name: nameObj[d],\n                            data: dataArr,\n                            id: d,\n                            acc: dataArr[0].count,\n                            now: 0,\n                        }\n                        return obj;\n                    }, {})\n                    .values()\n                    .value();\n\n                const dataArr = final\n                    .map(d => d.data)\n                    .flat()\n                    .map(d => d.addCount);\n                _.forIn(final, d => {\n                    d.chart = <Scatter\n                        data={d.data}\n                        extent = {extent(dataArr)}\n                        id={d.id}\n                    />\n                });\n                this.data = final\n            }\n        },\n        mounted() {\n            this.$nextTick(() => {\n                this.height = this.$refs.container.offsetHeight\n            })\n            this.initData()\n        }\n    }\n</script>\n\n<style lang=\"less\">\n    .table-container{\n        height: 100%;\n    }\n    .el-table{\n        background-color: rgba(0, 0, 0, 0);\n        color: #869ea7 !important;\n        .el-table__body-wrapper {\n            // overflow: visible;\n        }\n        thead{\n            color: #97c9ef !important;\n        }\n        tr{\n            background-color: rgba(0, 0, 0, 0) !important;\n            th{\n                background-color: rgba(0, 0, 0, 0) !important;\n                border: none !important;\n            }\n            td{\n                border: none !important;\n            }\n            &:hover{\n                td{\n                    background-color: rgba(0, 0, 0, 0) !important;\n                }\n                \n            }\n        }\n        &::before{\n            content: none;\n        }\n        .scatter-chart {\n            .cell {\n                width: 100%;\n                overflow: visible;\n            }\n        }\n    }\n</style>"],"sourceRoot":"src/page/comparison/components"}]}