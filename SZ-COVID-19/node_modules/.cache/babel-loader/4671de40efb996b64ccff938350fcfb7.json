{"remainingRequest":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/babel-loader/lib/index.js!/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/yujiahao/Downloads/visual_work/SZ-COVID-19/src/page/comparison/components/heatmap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/src/page/comparison/components/heatmap.vue","mtime":1618921752519},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/cache-loader/dist/cjs.js","mtime":1617788517390},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/babel-loader/lib/index.js","mtime":1617788517170},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/cache-loader/dist/cjs.js","mtime":1617788517390},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/vue-loader/lib/index.js","mtime":1617788568833}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy9pbXBvcnQgKiBhcyBkMyBmcm9tICdkMyc7Ci8vaW1wb3J0IFBsYXllckRhdGEgZnJvbSAnQC9kYXRhL3BsYXllcicKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdoZWF0bWFwJywKICBjb21wb25lbnRzOiB7fSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcGxheWVyZGF0YTogW10sCiAgICAgIGRlZmF1bHRfbnVtOiAzLAogICAgICBwbGF5ZXJfbGFiZWw6IFtdLAogICAgICBwbGF5ZXJfb3RoZXI6IFtdCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIC8vY29uc29sZS5sb2coIjEyMyIpOwogICAgdGhpcy5pbml0RGF0YSgpOwogIH0sCiAgbWV0aG9kczogewogICAgaW5pdERhdGE6IGZ1bmN0aW9uIGluaXREYXRhKCkgewogICAgICAvKnRoaXMucGxheWVyZGF0YT1QbGF5ZXJEYXRhOwogICAgICBmb3IgKHZhciBpPTA7IGk8dGhpcy5wbGF5ZXJkYXRhLmxlbmd0aDsgaSsrKXsKICAgICAgICAgIGlmKGk8dGhpcy5kZWZhdWx0X251bSl7CiAgICAgICAgICAgICAgdGhpcy5wbGF5ZXJfbGFiZWwucHVzaCh0aGlzLnBsYXllcmRhdGFbaV0pOwogICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICAgdGhpcy5wbGF5ZXJfb3RoZXIucHVzaCh0aGlzLnBsYXllcmRhdGFbaV0pOwogICAgICAgICAgfQogICAgICB9Ki8KICAgIH0sCgogICAgLyoKICAgIGRyYXcoKSB7CiAgICAgICAgdmFyIGFycmF5X2RhdGEgPSBbXTsKICAgICAgICAvLyDkuIDlj6Xor53lrprkuYnkuobkvJflpJrlj5jph4/vvIwg5a6a5LmJ5LqG5Z2X5YS/55qE5L2N572u44CB5a696auY44CB5bCP5qC85a2Q55qE6L656ZW/562J562J5LiO5biD5bGA5pyJ5YWz55qE5Y+Y6YePCiAgICAgICAgdmFyIG1hcmdpbiA9IHsgdG9wOiA1MCwgcmlnaHQ6IDAsIGJvdHRvbTogMTAwLCBsZWZ0OiAxNTAgfSwKICAgICAgICAgICAgd2lkdGggPSA5NjAgLSBtYXJnaW4ubGVmdCAtIG1hcmdpbi5yaWdodCwgICAgICAgIC8vIOaJgOacieagvOWtkOWMuuWfn+eahOWuveW6pu+8jOWNs0hlYXRtYXDnmoTlrr3luqYKICAgICAgICAgICAgaGVpZ2h0ID0gMTgzMCAtIG1hcmdpbi50b3AgLSBtYXJnaW4uYm90dG9tLAogICAgICAgICAgICBncmlkU2l6ZSA9IE1hdGguZmxvb3Iod2lkdGggLyAyNCksICAgIC8vIOaxguWcsOadv++8jOWNs+WOu+aOieWwj+aVsOmDqOWIhu+8jHdpZHRo5YiG5oiQMjTku70KICAgICAgICAgICAgbGVnZW5kRWxlbWVudFdpZHRoID0gZ3JpZFNpemUgKiAyLCAgICAvLyDlupXkuIvplb/mnaHnmoTplb/luqbvvIzmmK/moLzlrZDovrnplb/nmoTkuKTlgI0KICAgICAgICAgICAgYnVja2V0cyA9IDksICAgICAgICAvLyDkuIDlhbE556eN6aKc6Imy57qn5YirCiAgICAgICAgICAgIGNvbG9ycyA9IFsiI2ZmZmZkOSIsIiNlZGY4YjEiLCIjYzdlOWI0IiwiIzdmY2RiYiIsIiM0MWI2YzQiLCIjMWQ5MWMwIiwiIzIyNWVhOCIsIiMyNTM0OTQiLCIjMDgxZDU4Il0sIAogICAgICAgICAgICAvLyBhbHRlcm5hdGl2ZWx5IGNvbG9yYnJld2VyLllsR25CdVs5XQogICAgICAgICAgICAvLyBkYXlzID0gWyJNbyIsICJUdSIsICJXZSIsICJUaCIsICJGciIsICJTYSIsICJTdSJdLAogICAgICAgICAgICAvL3RpbWVzID0gWyIxYSIsICIyYSIsICIzYSIsICI0YSIsICI1YSIsICI2YSIsICI3YSIsICI4YSIsICI5YSIsICIxMGEiLCAiMTFhIiwgIjEyYSIsICIxcCIsICIycCIsICIzcCIsICI0cCIsICI1cCIsICI2cCIsICI3cCIsICI4cCIsICI5cCIsICIxMHAiLCAiMTFwIiwgIjEycCJdOwogICAgICAgICAgICB0ZXN0cyA9IFsiRyIsIk1JTiIsIlBUUyIsIkZHTSIsIkZHQSIsIkZHUCIsIkZUTSIsIkZUQSIsIkZUUCIsIjNQTSIsIjNQQSIsIjNQUCIsIk9SQiIsIkRSQiIsIlRSQiIsIkFTVCIsIlNUTCIsIkJMSyIsIlRPIiwiUEYiXTsKICAgICAgICAgICAgLy8g5Ye95pWw77yM6K+75Y+WIENTViDmlofku7YKICAgICAgICBkMy5jc3YoImJhbGxfZGF0YS5jc3YiLCAvL2Z1bmN0aW9uKGQpIHt9LCBmdW5jdGlvbihlcnJvciwgZGF0YSkge30gKTsKICAgICAgICAgICAgICAgICAgIC8vIOavj+S4gOihjOeahOaVsOaNrgogICAgICAgICAgICAvL2Z1bmN0aW9uKGQpIHsKICAgICAgICAgICAgICAvLyAgcmV0dXJuIHsKICAgICAgICAgICAgICAgIC8vICAgIGRheTogK2QuZGF5LAogICAgICAgICAgICAgICAgICAvLyAgaG91cjogK2QuaG91ciwKICAgICAgICAgICAgICAgICAgICAvL3ZhbHVlOiArZC52YWx1ZQogICAgICAgICAgICAgICAgLy99OwogICAgICAgICAgICAvL30sCiAgICAKICAgICAgICAgICAgZnVuY3Rpb24oZXJyb3IsIGRhdGEpIHsKICAgICAgICAgICAgICAgIC8vaWYoZXJyb3IpeyAgCiAgICAgICAgICAgICAgICAgIC8vICBjb25zb2xlLmxvZyhlcnJvcik7ICAKICAgICAgICAgICAgICAgIC8vfSAgCiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKGNzdmRhdGEpOwogICAgICAgICAgICAgICAgLy8gY29sb3JTY2FsZe+8muminOiJsue6p+WIqwogICAgICAgICAgICAgICAgdmFyIGNvbG9yU2NhbGUgPSBkMy5zY2FsZS5xdWFudGlsZSgpICAgICAgICAvLyDmjInliIbkvY3mlbDlj5blgLzvvIzlj6/kvb/mr4/kuKrljLrln5/lhoXlhYPntKDkuKrmlbDnm7jnrYkKICAgICAgICAgICAgICAgICAgICAuZG9tYWluKFswLCBidWNrZXRzIC0gMSwgZDMubWF4KGRhdGEsIGZ1bmN0aW9uIChkKSB7IHJldHVybiBkLkc7IH0pXSkgIC8vIOWumuS5ieWfnwogICAgICAgICAgICAgICAgLy8gZG9tYWluKFswLCBuLCDmlbDmja7nmoTmnIDlpKflgLxdKTsKICAgICAgICAgICAgICAgICAgICAucmFuZ2UoY29sb3JzKTsgICAgLy8g5YC85Z+f77ya5piv6aKc6Imy5pWw57uE77yM5Ye95pWw55qE6L+U5Zue5YC85piv5Luj6KGo5p+Q56eN6aKc6Imy55qE5a2X56ym5LiyCiAgICAgIAogICAgICAgICAgICAgICAgICAgIC8vIOiuvue9rmNoYXJ077yMc3ZnCiAgICAgICAgICAgICAgICB2YXIgc3ZnID0gZDMuc2VsZWN0KCIjY2hhcnQiKS5hcHBlbmQoInN2ZyIpIC8vIOmAieaLqeKAnGNoYXJ04oCd77yI5bCx5pivZGl277yJ77yM5Yqg5YWl5LiA5Liqc3Zn77yM6K6+572u5bGe5oCn6LefZGl25LiA5qC35aSnCiAgICAgICAgICAgICAgICAgICAgLmF0dHIoIndpZHRoIiwgd2lkdGggKyBtYXJnaW4ubGVmdCArIG1hcmdpbi5yaWdodCkKICAgICAgICAgICAgICAgICAgICAuYXR0cigiaGVpZ2h0IiwgaGVpZ2h0ICsgbWFyZ2luLnRvcCArIG1hcmdpbi5ib3R0b20pCiAgICAgICAgICAgICAgICAgICAgLmFwcGVuZCgiZyIpICAgIC8vIOWcqHN2Z+WGheWKoOWFpeS4gOS4qmfvvIhncm91cOe7hO+8ie+8jOW5tuiuvue9ruWFg+e0oGfnmoTmmL7npLrkvY3nva4KICAgICAgICAgICAgICAgICAgICAuYXR0cigidHJhbnNmb3JtIiwgInRyYW5zbGF0ZSgiICsgbWFyZ2luLmxlZnQgKyAiLCIgKyBtYXJnaW4udG9wICsgIikiKTsKICAgICAgICAKICAgICAgICAgICAgICAgIC8vIOe8lui+keWnk+WQjeihjAogICAgICAgICAgICAgICAgdmFyIGRheUxhYmVscyA9IHN2Zy5zZWxlY3RBbGwoIi5uYW1lTGFiZWwiKQogICAgICAgICAgICAgICAgICAgIC5kYXRhKGRhdGEpCiAgICAgICAgICAgICAgICAgICAgLmVudGVyKCkgICAgLy8g5Li6ZGF0YeS4reavj+S4gOmhueWIm+W7uuS4gOS4qiIuZGF5TGFiZWwiCiAgICAgICAgICAgICAgICAgICAgLmFwcGVuZCgidGV4dCIpICAgIC8vIOS4umRheXPkuK3mr4/kuIDpobnliJvlu7rkuIDnmoQiLmRheUxhYmVsIua3u+WKoOaWh+acrO+8jOS4i+mdouWFqOaYr+iuvue9ruaWh+acrOeahOWxnuaApwogICAgICAgICAgICAgICAgICAgIC50ZXh0KGZ1bmN0aW9uIChkLCBpKSB7IHJldHVybiBkYXRhW2ldLm5hbWU7IH0pCiAgICAgICAgICAgICAgICAgICAgLmF0dHIoIngiLCAwKQogICAgICAgICAgICAgICAgICAgIC5hdHRyKCJ5IiwgZnVuY3Rpb24gKGQsIGkpIHsgcmV0dXJuIGkgKiBncmlkU2l6ZTsgfSkKICAgICAgICAgICAgICAgICAgICAuc3R5bGUoInRleHQtYW5jaG9yIiwgImVuZCIpCiAgICAgICAgICAgICAgICAgICAgLmF0dHIoInRyYW5zZm9ybSIsICJ0cmFuc2xhdGUoLTYsIiArIGdyaWRTaXplIC8gMS41ICsgIikiKQogICAgICAgICAgICAgICAgICAgIC5hdHRyKCJjbGFzcyIsIGZ1bmN0aW9uIChkLCBpKSB7IHJldHVybiAoKGkgPj0gMCAmJiBpIDw9IDQpID8gIm5hbWVMYWJlbCBtb25vIGF4aXMgYXhpcy13b3Jrd2VlayIgOiAibmFtZUxhYmVsIG1vbm8gYXhpcyIpOyAKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgIC8vIOe8lui+kea1i+ivlemhueihjAogICAgICAgICAgICAgICAgdmFyIHRpbWVMYWJlbHMgPSBzdmcuc2VsZWN0QWxsKCIudGVzdExhYmVsIikKICAgICAgICAgICAgICAgICAgICAuZGF0YSh0ZXN0cykKICAgICAgICAgICAgICAgICAgICAuZW50ZXIoKS5hcHBlbmQoInRleHQiKQogICAgICAgICAgICAgICAgICAgIC50ZXh0KGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQ7IH0pCiAgICAgICAgICAgICAgICAgICAgLmF0dHIoIngiLCBmdW5jdGlvbihkLCBpKSB7IHJldHVybiBpICogZ3JpZFNpemU7IH0pCiAgICAgICAgICAgICAgICAgICAgLmF0dHIoInkiLCAwKQogICAgICAgICAgICAgICAgICAgIC5zdHlsZSgidGV4dC1hbmNob3IiLCAibWlkZGxlIikKICAgICAgICAgICAgICAgICAgICAuYXR0cigidHJhbnNmb3JtIiwgInRyYW5zbGF0ZSgiICsgZ3JpZFNpemUgLyAyICsgIiwgLTYpIikKICAgICAgICAgICAgICAgICAgICAuYXR0cigiY2xhc3MiLCBmdW5jdGlvbihkLCBpKSB7IAogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKChpID49IDcgJiYgaSA8PSAxNikgPyAidGVzdExhYmVsIG1vbm8gYXhpcyBheGlzLXdvcmt0aW1lIiA6ICJ0ZXN0TGFiZWwgbW9ubyBheGlzIik7IH0pOwogICAgICAKICAgICAgICAgICAgICAgIC8vIOeUu+WHuuagvOWtkO+8jOaaguS4jea2guiJsu+8jGNvbG9yWzBdCiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDUwOyBpKyspewogICAgICAgICAgICAgICAgICAgIGFycmF5X2RhdGFbaSoyMF0gPSBkYXRhW2ldLkc7CiAgICAgICAgICAgICAgICAgICAgYXJyYXlfZGF0YVtpKjIwKzFdID0gZGF0YVtpXS5NSU47CiAgICAgICAgICAgICAgICAgICAgYXJyYXlfZGF0YVtpKjIwKzJdID0gZGF0YVtpXS5QVFM7CiAgICAgICAgICAgICAgICAgICAgYXJyYXlfZGF0YVtpKjIwKzNdID0gZGF0YVtpXS5GR007CiAgICAgICAgICAgICAgICAgICAgYXJyYXlfZGF0YVtpKjIwKzRdID0gZGF0YVtpXS5GR0E7CiAgICAgICAgICAgICAgICAgICAgYXJyYXlfZGF0YVtpKjIwKzVdID0gZGF0YVtpXS5GR1A7CiAgICAgICAgICAgICAgICAgICAgYXJyYXlfZGF0YVtpKjIwKzZdID0gZGF0YVtpXS5GVE07CiAgICAgICAgICAgICAgICAgICAgYXJyYXlfZGF0YVtpKjIwKzddID0gZGF0YVtpXS5GVEE7CiAgICAgICAgICAgICAgICAgICAgYXJyYXlfZGF0YVtpKjIwKzhdID0gZGF0YVtpXS5GVFA7CiAgICAgICAgICAgICAgICAgICAgYXJyYXlfZGF0YVtpKjIwKzldID0gZGF0YVtpXS5QM1BNOwogICAgICAgICAgICAgICAgICAgIGFycmF5X2RhdGFbaSoyMCsxMF0gPSBkYXRhW2ldLlAzUEE7CiAgICAgICAgICAgICAgICAgICAgYXJyYXlfZGF0YVtpKjIwKzExXSA9IGRhdGFbaV0uUDNQUDsKICAgICAgICAgICAgICAgICAgICBhcnJheV9kYXRhW2kqMjArMTJdID0gZGF0YVtpXS5PUkI7CiAgICAgICAgICAgICAgICAgICAgYXJyYXlfZGF0YVtpKjIwKzEzXSA9IGRhdGFbaV0uRFJCOwogICAgICAgICAgICAgICAgICAgIGFycmF5X2RhdGFbaSoyMCsxNF0gPSBkYXRhW2ldLlRSQjsKICAgICAgICAgICAgICAgICAgICBhcnJheV9kYXRhW2kqMjArMTVdID0gZGF0YVtpXS5BU1Q7CiAgICAgICAgICAgICAgICAgICAgYXJyYXlfZGF0YVtpKjIwKzE2XSA9IGRhdGFbaV0uU1RMOwogICAgICAgICAgICAgICAgICAgIGFycmF5X2RhdGFbaSoyMCsxN10gPSBkYXRhW2ldLkJMSzsKICAgICAgICAgICAgICAgICAgICBhcnJheV9kYXRhW2kqMjArMThdID0gZGF0YVtpXS5UTzsKICAgICAgICAgICAgICAgICAgICBhcnJheV9kYXRhW2kqMjArMTldID0gZGF0YVtpXS5QRjsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICB2YXIgaGVhdE1hcCA9IHN2Zy5zZWxlY3RBbGwoIi5zY29yZSIpCiAgICAgICAgICAgICAgICAgICAgLmRhdGEoYXJyYXlfZGF0YSkKICAgICAgICAgICAgICAgICAgICAuZW50ZXIoKSAgICAgICAgLy8g5Li6ZGF0YeS4reavj+S4gOmhueWIm+W7uuS4gOS4qiIuaG91ciIKICAgICAgICAgICAgICAgICAgICAuYXBwZW5kKCJyZWN0IikKICAgICAgICAgICAgICAgICAgICAuYXR0cigieCIsIGZ1bmN0aW9uKGQsIGkpeyByZXR1cm4gKGkgJSAyMCkqZ3JpZFNpemU7fSkKICAgICAgICAgICAgICAgICAgICAuYXR0cigieSIsIGZ1bmN0aW9uKGQsIGkpeyByZXR1cm4gcGFyc2VJbnQoaSAvIDIwKSpncmlkU2l6ZTt9KQogICAgICAgICAgICAgICAgICAgIC5hdHRyKCJyeCIsIDYpCiAgICAgICAgICAgICAgICAgICAgLmF0dHIoInJ5IiwgNikKICAgICAgICAgICAgICAgICAgICAuYXR0cigiY2xhc3MiLCAiaG91ciBib3JkZXJlZCIpCiAgICAgICAgICAgICAgICAgICAgLmF0dHIoIndpZHRoIiwgZ3JpZFNpemUpCiAgICAgICAgICAgICAgICAgICAgLmF0dHIoImhlaWdodCIsIGdyaWRTaXplKQogICAgICAgICAgICAgICAgICAgIC5zdHlsZSgiZmlsbCIsICIjRkZGRkZGIik7CiAgICAgICAgCiAgICAgICAgICAgICAgICAvLyBkdXJhdGlvbigxMDAwKSDlnKgxMDAwbnPkuZ/lsLHmmK8xc+WGheWwhuagvOWtkOWbvuS4iuiJsgogICAgICAgICAgICAgICAgaGVhdE1hcC50cmFuc2l0aW9uKCkuZHVyYXRpb24oMTAwMCkKICAgICAgICAgICAgICAgICAgICAuc3R5bGUoImZpbGwiLCBmdW5jdGlvbihkKSB7IHJldHVybiBjb2xvclNjYWxlKGQpOyB9KTsKICAgICAgICAKICAgICAgICAgICAgICAgIC8vIOm8oOagh+WBnOeVmeaYvuekunZhbHVlCiAgICAgICAgICAgICAgICBoZWF0TWFwLmFwcGVuZCgidGl0bGUiKS50ZXh0KGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQuRzsgfSk7CiAgICAgICAgICAKICAgICAgICAgICAgICAgIC8vIGxlZ2VuZCDmmK/kuIDkuKrmnIk35Liq57uE55qE5LuA5LmI5Lic6KW/77yM77yM77yMCiAgICAgICAgICAgICAgICB2YXIgbGVnZW5kID0gc3ZnLnNlbGVjdEFsbCgiLmxlZ2VuZCIpCiAgICAgICAgICAgICAgICAgICAgLmRhdGEoWzBdLmNvbmNhdChjb2xvclNjYWxlLnF1YW50aWxlcygpKSwgZnVuY3Rpb24oZCkgeyByZXR1cm4gZDsgfSkgICAgLy8g55SxZGF0YeiOt+W+l+eahOWFg+e0oOS4quaVsOS4ujcKICAgICAgICAgICAgICAgICAgICAuZW50ZXIoKS5hcHBlbmQoImciKQogICAgICAgICAgICAgICAgICAgIC5hdHRyKCJjbGFzcyIsICJsZWdlbmQiKTsKICAgICAgICAgICAgICAgICAgICAgbGVnZW5kLmFwcGVuZCgicmVjdCIpCiAgICAgICAgICAgICAgICAgICAgLmF0dHIoIngiLCBmdW5jdGlvbihkLCBpKSB7IHJldHVybiBsZWdlbmRFbGVtZW50V2lkdGggKiBpOyB9KQogICAgICAgICAgICAgICAgICAgIC5hdHRyKCJ5IiwgaGVpZ2h0KQogICAgICAgICAgICAgICAgICAgIC5hdHRyKCJ3aWR0aCIsIGxlZ2VuZEVsZW1lbnRXaWR0aCkKICAgICAgICAgICAgICAgICAgICAuYXR0cigiaGVpZ2h0IiwgZ3JpZFNpemUgLyAyKQogICAgICAgICAgICAgICAgICAgIC5zdHlsZSgiZmlsbCIsIGZ1bmN0aW9uKGQsIGkpIHsgcmV0dXJuIGNvbG9yc1tpXTsgfSk7CiAgICAgICAgICAgICAgICAgICAgIGxlZ2VuZC5hcHBlbmQoInRleHQiKQogICAgICAgICAgICAgICAgICAgIC5hdHRyKCJjbGFzcyIsICJtb25vIikKICAgICAgICAgICAgICAgICAgICAudGV4dChmdW5jdGlvbihkKSB7IHJldHVybiAiPj0gIitNYXRoLnJvdW5kKGQpOyB9KQogICAgICAgICAgICAgICAgICAgIC5hdHRyKCJ4IiwgZnVuY3Rpb24oZCwgaSkgeyByZXR1cm4gbGVnZW5kRWxlbWVudFdpZHRoICogaTsgfSkKICAgICAgICAgICAgICAgICAgICAuYXR0cigieSIsIGhlaWdodCArIGdyaWRTaXplKTsKICAgICAgICAgICAgfSk7CiAgICB9LCovCiAgICBoYW5kbGVDbGljazogZnVuY3Rpb24gaGFuZGxlQ2xpY2soaXRlbSwgaW5kZXgpIHsKICAgICAgY29uc29sZS5sb2coaXRlbSwgaW5kZXgpOwogICAgICB0aGlzLnBsYXllcl9sYWJlbC5wdXNoKGl0ZW0pOwogICAgICB0aGlzLnBsYXllcl9vdGhlci5zcGxpY2UoaW5kZXgsIDEpOyAvL3RoaXMuaW5pdERhdGEoKTsKICAgIH0sCiAgICBoYW5kbGVDaGFuZ2U6IGZ1bmN0aW9uIGhhbmRsZUNoYW5nZShpdGVtLCBpbmRleCkgewogICAgICBjb25zb2xlLmxvZyhpdGVtLCBpbmRleCk7CiAgICAgIHRoaXMucGxheWVyX2xhYmVsLnNwbGljZShpbmRleCwgMSk7CiAgICAgIHRoaXMucGxheWVyX290aGVyLnB1c2goaXRlbSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["heatmap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,UAAA,EAAA,EAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,EADA;AAEA,MAAA,WAAA,EAAA,CAFA;AAGA,MAAA,YAAA,EAAA,EAHA;AAIA,MAAA,YAAA,EAAA;AAJA,KAAA;AAMA,GAVA;AAWA,EAAA,OAXA,qBAWA;AACA;AACA,SAAA,QAAA;AACA,GAdA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA;;;;;;;;AASA,KAXA;;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsIA,IAAA,WAlJA,uBAkJA,IAlJA,EAkJA,KAlJA,EAkJA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA,EAAA,KAAA;AACA,WAAA,YAAA,CAAA,IAAA,CAAA,IAAA;AACA,WAAA,YAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,EAHA,CAIA;AACA,KAvJA;AAwJA,IAAA,YAxJA,wBAwJA,IAxJA,EAwJA,KAxJA,EAwJA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA,EAAA,KAAA;AACA,WAAA,YAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;AACA,WAAA,YAAA,CAAA,IAAA,CAAA,IAAA;AACA;AA5JA;AAfA,CAAA","sourcesContent":["<template>\n    <div class=\"heatmap\">\n        <el-dropdown class=\"btn\">\n            <el-button type=\"primary\" size=\"mini\">\n                增<i class=\"el-icon-arrow-down el-icon--right\"></i>\n            </el-button>\n            <template #dropdown>\n                <el-dropdown-menu>\n                    <el-dropdown-item \n                        :key=\"item\"\n                        v-for=\"(item, index) in player_other\"\n                        @click.native=\"handleClick(item,index)\">{{item.name_zh}}\n                    </el-dropdown-item>\n                </el-dropdown-menu>\n            </template>\n        </el-dropdown>\n        <svg></svg>\n        <!--<div class=\"map_row\">\n            <el-tag class=\"small_box_row\" \n                closable\n                v-for=\"(item,index) in player_label\"\n                @close=\"handleChange(item,index)\">{{ item.name_zh }}\n            </el-tag>\n        </div>\n        <div class=\"map_col\">\n            <el-tag class=\"small_box_col\" \n                closable\n                v-for=\"(item,index) in player_label\"\n                @close=\"handleChange(item,index)\">{{ item.name_zh }}\n            </el-tag>\n        </div>-->\n    </div>\n</template>\n\n<script>\n    //import * as d3 from 'd3';\n    //import PlayerData from '@/data/player'\n    export default {\n        name: 'heatmap',\n        components: {},\n        data() {\n            return {\n                playerdata: [],\n                default_num: 3,\n                player_label: [],\n                player_other: [],\n            }\n        },\n        mounted() {\n            //console.log(\"123\");\n            this.initData();\n        },\n        methods: {\n            initData() {\n                /*this.playerdata=PlayerData;\n                for (var i=0; i<this.playerdata.length; i++){\n                    if(i<this.default_num){\n                        this.player_label.push(this.playerdata[i]);\n                    }else{\n                        this.player_other.push(this.playerdata[i]);\n                    }\n                }*/\n\n            },\n            /*\n            draw() {\n                var array_data = [];\n                // 一句话定义了众多变量， 定义了块儿的位置、宽高、小格子的边长等等与布局有关的变量\n                var margin = { top: 50, right: 0, bottom: 100, left: 150 },\n                    width = 960 - margin.left - margin.right,        // 所有格子区域的宽度，即Heatmap的宽度\n                    height = 1830 - margin.top - margin.bottom,\n                    gridSize = Math.floor(width / 24),    // 求地板，即去掉小数部分，width分成24份\n                    legendElementWidth = gridSize * 2,    // 底下长条的长度，是格子边长的两倍\n                    buckets = 9,        // 一共9种颜色级别\n                    colors = [\"#ffffd9\",\"#edf8b1\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#253494\",\"#081d58\"], \n                    // alternatively colorbrewer.YlGnBu[9]\n                    // days = [\"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"],\n                    //times = [\"1a\", \"2a\", \"3a\", \"4a\", \"5a\", \"6a\", \"7a\", \"8a\", \"9a\", \"10a\", \"11a\", \"12a\", \"1p\", \"2p\", \"3p\", \"4p\", \"5p\", \"6p\", \"7p\", \"8p\", \"9p\", \"10p\", \"11p\", \"12p\"];\n                    tests = [\"G\",\"MIN\",\"PTS\",\"FGM\",\"FGA\",\"FGP\",\"FTM\",\"FTA\",\"FTP\",\"3PM\",\"3PA\",\"3PP\",\"ORB\",\"DRB\",\"TRB\",\"AST\",\"STL\",\"BLK\",\"TO\",\"PF\"];\n                    // 函数，读取 CSV 文件\n                d3.csv(\"ball_data.csv\", //function(d) {}, function(error, data) {} );\n          \n                // 每一行的数据\n                    //function(d) {\n                      //  return {\n                        //    day: +d.day,\n                          //  hour: +d.hour,\n                            //value: +d.value\n                        //};\n                    //},\n            \n                    function(error, data) {\n                        //if(error){  \n                          //  console.log(error);  \n                        //}  \n                        //console.log(csvdata);\n                        // colorScale：颜色级别\n                        var colorScale = d3.scale.quantile()        // 按分位数取值，可使每个区域内元素个数相等\n                            .domain([0, buckets - 1, d3.max(data, function (d) { return d.G; })])  // 定义域\n                        // domain([0, n, 数据的最大值]);\n                            .range(colors);    // 值域：是颜色数组，函数的返回值是代表某种颜色的字符串\n              \n                            // 设置chart，svg\n                        var svg = d3.select(\"#chart\").append(\"svg\") // 选择“chart”（就是div），加入一个svg，设置属性跟div一样大\n                            .attr(\"width\", width + margin.left + margin.right)\n                            .attr(\"height\", height + margin.top + margin.bottom)\n                            .append(\"g\")    // 在svg内加入一个g（group组），并设置元素g的显示位置\n                            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n                \n                        // 编辑姓名行\n                        var dayLabels = svg.selectAll(\".nameLabel\")\n                            .data(data)\n                            .enter()    // 为data中每一项创建一个\".dayLabel\"\n                            .append(\"text\")    // 为days中每一项创建一的\".dayLabel\"添加文本，下面全是设置文本的属性\n                            .text(function (d, i) { return data[i].name; })\n                            .attr(\"x\", 0)\n                            .attr(\"y\", function (d, i) { return i * gridSize; })\n                            .style(\"text-anchor\", \"end\")\n                            .attr(\"transform\", \"translate(-6,\" + gridSize / 1.5 + \")\")\n                            .attr(\"class\", function (d, i) { return ((i >= 0 && i <= 4) ? \"nameLabel mono axis axis-workweek\" : \"nameLabel mono axis\"); \n                            });\n     \n                        // 编辑测试项行\n                        var timeLabels = svg.selectAll(\".testLabel\")\n                            .data(tests)\n                            .enter().append(\"text\")\n                            .text(function(d) { return d; })\n                            .attr(\"x\", function(d, i) { return i * gridSize; })\n                            .attr(\"y\", 0)\n                            .style(\"text-anchor\", \"middle\")\n                            .attr(\"transform\", \"translate(\" + gridSize / 2 + \", -6)\")\n                            .attr(\"class\", function(d, i) { \n                                return ((i >= 7 && i <= 16) ? \"testLabel mono axis axis-worktime\" : \"testLabel mono axis\"); });\n              \n                        // 画出格子，暂不涂色，color[0]\n                        for (var i = 0; i < 50; i++){\n                            array_data[i*20] = data[i].G;\n                            array_data[i*20+1] = data[i].MIN;\n                            array_data[i*20+2] = data[i].PTS;\n                            array_data[i*20+3] = data[i].FGM;\n                            array_data[i*20+4] = data[i].FGA;\n                            array_data[i*20+5] = data[i].FGP;\n                            array_data[i*20+6] = data[i].FTM;\n                            array_data[i*20+7] = data[i].FTA;\n                            array_data[i*20+8] = data[i].FTP;\n                            array_data[i*20+9] = data[i].P3PM;\n                            array_data[i*20+10] = data[i].P3PA;\n                            array_data[i*20+11] = data[i].P3PP;\n                            array_data[i*20+12] = data[i].ORB;\n                            array_data[i*20+13] = data[i].DRB;\n                            array_data[i*20+14] = data[i].TRB;\n                            array_data[i*20+15] = data[i].AST;\n                            array_data[i*20+16] = data[i].STL;\n                            array_data[i*20+17] = data[i].BLK;\n                            array_data[i*20+18] = data[i].TO;\n                            array_data[i*20+19] = data[i].PF;\n                        }\n\n                        var heatMap = svg.selectAll(\".score\")\n                            .data(array_data)\n                            .enter()        // 为data中每一项创建一个\".hour\"\n                            .append(\"rect\")\n                            .attr(\"x\", function(d, i){ return (i % 20)*gridSize;})\n                            .attr(\"y\", function(d, i){ return parseInt(i / 20)*gridSize;})\n                            .attr(\"rx\", 6)\n                            .attr(\"ry\", 6)\n                            .attr(\"class\", \"hour bordered\")\n                            .attr(\"width\", gridSize)\n                            .attr(\"height\", gridSize)\n                            .style(\"fill\", \"#FFFFFF\");\n                \n                        // duration(1000) 在1000ns也就是1s内将格子图上色\n                        heatMap.transition().duration(1000)\n                            .style(\"fill\", function(d) { return colorScale(d); });\n                \n                        // 鼠标停留显示value\n                        heatMap.append(\"title\").text(function(d) { return d.G; });\n                  \n                        // legend 是一个有7个组的什么东西，，，\n                        var legend = svg.selectAll(\".legend\")\n                            .data([0].concat(colorScale.quantiles()), function(d) { return d; })    // 由data获得的元素个数为7\n                            .enter().append(\"g\")\n                            .attr(\"class\", \"legend\");\n    \n                        legend.append(\"rect\")\n                            .attr(\"x\", function(d, i) { return legendElementWidth * i; })\n                            .attr(\"y\", height)\n                            .attr(\"width\", legendElementWidth)\n                            .attr(\"height\", gridSize / 2)\n                            .style(\"fill\", function(d, i) { return colors[i]; });\n    \n                        legend.append(\"text\")\n                            .attr(\"class\", \"mono\")\n                            .text(function(d) { return \">= \"+Math.round(d); })\n                            .attr(\"x\", function(d, i) { return legendElementWidth * i; })\n                            .attr(\"y\", height + gridSize);\n                    });\n            },*/\n            handleClick(item,index) {\n                console.log(item,index);\n                this.player_label.push(item);\n                this.player_other.splice(index,1);\n                //this.initData();\n            },\n            handleChange(item,index){\n                console.log(item,index);\n                this.player_label.splice(index,1);\n                this.player_other.push(item);\n            }\n        },\n};\n</script>\n\n<style lang=\"less\">\n    .heatmap{\n        width: 100%;\n        height: 100%;\n        .btn{\n            float: right;\n            .el-dropdown {\n                vertical-align: top;\n            }\n            .el-dropdown + .el-dropdown {\n                margin-left: 15px;\n            }\n            .el-icon-arrow-down {\n                font-size: 12px;\n            }\n        }\n        .map_row{\n            width: 80%;\n            display: flex;\n            flex-direction: row;\n            text-align: center;\n            .small_box_row{\n                width: 100%;\n                height: 100%;\n            }\n        }\n        .map_col{\n            height: 80%;\n            width: 5%;\n            display: flex;\n            flex-direction: column;\n            .small_box_col{\n                width: 100%;\n                height: 100%;\n                text-align: center;\n                writing-mode: vertical-lr;\n            }\n        }\n    }\n</style>"],"sourceRoot":"src/page/comparison/components"}]}