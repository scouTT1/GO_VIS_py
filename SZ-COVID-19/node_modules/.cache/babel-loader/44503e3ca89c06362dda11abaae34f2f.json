{"remainingRequest":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/babel-loader/lib/index.js!/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/eslint-loader/index.js??ref--13-0!/home/yujiahao/Downloads/visual_work/SZ-COVID-19/src/page/case/methods/dataProcessor.js","dependencies":[{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/src/page/case/methods/dataProcessor.js","mtime":1617781888091},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/cache-loader/dist/cjs.js","mtime":1617788517390},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/babel-loader/lib/index.js","mtime":1617788517170},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/eslint-loader/index.js","mtime":1617788558549}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnJlZHVjZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3RvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci50by1maXhlZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwppbXBvcnQgXyBmcm9tICdsb2Rhc2gnOwppbXBvcnQgVHJhY2tKU09OIGZyb20gJ0AvZGF0YS90cmFjayc7CmV4cG9ydCBmdW5jdGlvbiBpbml0RGF0YSgpIHsKICB2YXIgbGlua0lkcyA9IFtdOwoKICBfLmZvckluKFRyYWNrSlNPTiwgZnVuY3Rpb24gKGQpIHsKICAgIHZhciByZWxhdGlvbiA9IGQueXF0YmxneDsKICAgIHZhciB0YXJnZXRJZCA9IGQuYmxoOwoKICAgIGlmIChyZWxhdGlvbikgewogICAgICB2YXIgcmVsYXRpb25BcnIgPSByZWxhdGlvbi5tYXRjaCgvXGQrL2cpOwogICAgICByZWxhdGlvbkFyci5mb3JFYWNoKGZ1bmN0aW9uIChzb3VyY2VpZCkgewogICAgICAgIGxpbmtJZHMucHVzaChzb3VyY2VpZCwgdGFyZ2V0SWQpOwogICAgICB9KTsKICAgIH0KICB9KTsKCiAgVHJhY2tKU09OLmZvckVhY2goZnVuY3Rpb24gKGQpIHsKICAgIHZhciBubFJhbmdlID0gJyc7CiAgICB2YXIgbmwgPSBOdW1iZXIoZC5ubCk7CgogICAgaWYgKG5sIDw9IDEwKSB7CiAgICAgIG5sUmFuZ2UgPSAnMH4xMCc7CiAgICB9IGVsc2UgaWYgKG5sID4gMTAgJiYgbmwgPD0gMjApIHsKICAgICAgbmxSYW5nZSA9ICcxMH4yMCc7CiAgICB9IGVsc2UgaWYgKG5sID4gMjAgJiYgbmwgPD0gMzApIHsKICAgICAgbmxSYW5nZSA9ICcyMH4zMCc7CiAgICB9IGVsc2UgaWYgKG5sID4gMzAgJiYgbmwgPD0gNDApIHsKICAgICAgbmxSYW5nZSA9ICczMH40MCc7CiAgICB9IGVsc2UgaWYgKG5sID4gNDAgJiYgbmwgPD0gNTApIHsKICAgICAgbmxSYW5nZSA9ICc0MH41MCc7CiAgICB9IGVsc2UgewogICAgICBubFJhbmdlID0gJzUwfuS7peS4iic7CiAgICB9CgogICAgaWYgKGQucmVhc29uID09PSAiIikgewogICAgICBkLnJlYXNvbiA9ICfmnKrnn6UnOwogICAgfQoKICAgIGQubmxSYW5nZSA9IG5sUmFuZ2U7CiAgICBkLnJlbGF0aW9uID0gbGlua0lkcy5pbmNsdWRlcyhkLmJsaCkgPyAn5piO56Gu5YWz57O7JyA6ICfljZXni6znl4XkvosnOwogICAgdmFyIGxpdmVsb2NhdGlvbiA9ICfmnKrnn6UnOwoKICAgIGlmIChkLmp6ZCkgewogICAgICBpZiAoZC5qemQuaW5jbHVkZXMoJ+a3seWcsycpKSB7CiAgICAgICAgbGl2ZWxvY2F0aW9uID0gJ+a3seWcsyc7CiAgICAgIH0gZWxzZSBpZiAoZC5qemQuaW5jbHVkZXMoJ+ecgScpKSB7CiAgICAgICAgbGl2ZWxvY2F0aW9uID0gZC5qemQuc3BsaXQoJ+ecgScpWzBdOwogICAgICB9IGVsc2UgewogICAgICAgIGxpdmVsb2NhdGlvbiA9IGQuanpkOwogICAgICB9CiAgICB9CgogICAgZC5saXZlbG9jYXRpb24gPSBsaXZlbG9jYXRpb247CiAgICBkLnJlYWxEYXRlID0gIjIwMjAvIi5jb25jYXQoZC5mYnJxLnJlcGxhY2UoL+aciC8sICcvJykucmVwbGFjZSgv5pelLywgJycpKTsgLy8gZC5vcmlnaW4gPSBkLnRyYWNrICYmIGQudHJhY2subGVuZ3RoID4gMCA/IGQudHJhY2tbMF0uZnJvbSA6ICfmt7HlnLMnOwoKICAgIGQucXpEYXRlID0gIiIuY29uY2F0KGQuZmJycS5yZXBsYWNlKC/mnIgvLCAnLycpLnJlcGxhY2UoL+aXpS8sICcnKSk7CiAgfSk7Cn0KZXhwb3J0IGZ1bmN0aW9uIGFnZ3JlKHNvcnRrZXkpIHsKICB2YXIgdG90YWwgPSBUcmFja0pTT04ubGVuZ3RoOwogIHJldHVybiBfLmNoYWluKFRyYWNrSlNPTikucmVkdWNlKGZ1bmN0aW9uIChvYmosIGQpIHsKICAgIHZhciBrZXkgPSBkW3NvcnRrZXldID09PSAnJyA/ICfmnKrnn6UnIDogZFtzb3J0a2V5XTsKICAgIHZhciB2YWx1ZSA9IG9ialtrZXldID8gb2JqW2tleV0udmFsdWUgKyAxIDogMTsKICAgIG9ialtrZXldID0gewogICAgICBuYW1lOiBrZXksCiAgICAgIHZhbHVlOiB2YWx1ZSwKICAgICAgcGVyY2VudDogIiIuY29uY2F0KCh2YWx1ZSAqIDEwMCAvIHRvdGFsKS50b0ZpeGVkKDIpLCAiJSIpCiAgICB9OwogICAgcmV0dXJuIG9iajsKICB9LCB7fSkudmFsdWVzKCkub3JkZXJCeSgndmFsdWUnLCAnZGVzYycpLnZhbHVlKCk7Cn0KZXhwb3J0IGZ1bmN0aW9uIGNhbGN1bGF0ZU5vZGVBbmRMaW5rKGRhdGEpIHsKICB2YXIgbGlua3MgPSBbXTsKICB2YXIgbGlua0lkcyA9IFtdOwogIHZhciBub2RlcyA9IGRhdGE7CiAgdmFyIG5vZGVJZHMgPSBkYXRhLm1hcChmdW5jdGlvbiAoZCkgewogICAgcmV0dXJuIGQuYmxoOwogIH0pOwoKICBfLmZvckluKG5vZGVzLCBmdW5jdGlvbiAoZCkgewogICAgdmFyIHJlbGF0aW9uID0gZC55cXRibGd4OwogICAgdmFyIHRhcmdldElkID0gZC5ibGg7CgogICAgaWYgKHJlbGF0aW9uKSB7CiAgICAgIHZhciByZWxhdGlvbkFyciA9IHJlbGF0aW9uLm1hdGNoKC9cZCsvZyk7CiAgICAgIHJlbGF0aW9uQXJyLmZvckVhY2goZnVuY3Rpb24gKHNvdXJjZWlkKSB7CiAgICAgICAgaWYgKG5vZGVJZHMuaW5jbHVkZXMoc291cmNlaWQpICYmIG5vZGVJZHMuaW5jbHVkZXModGFyZ2V0SWQpKSB7CiAgICAgICAgICBsaW5rSWRzLnB1c2goc291cmNlaWQsIHRhcmdldElkKTsKICAgICAgICAgIGxpbmtzLnB1c2goewogICAgICAgICAgICBzb3VyY2U6IHNvdXJjZWlkLAogICAgICAgICAgICB0YXJnZXQ6IHRhcmdldElkCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0pOwoKICBub2Rlcy5mb3JFYWNoKGZ1bmN0aW9uIChkKSB7CiAgICB2YXIgY291bnQgPSBsaW5rSWRzLmZpbHRlcihmdW5jdGlvbiAoZDEpIHsKICAgICAgcmV0dXJuIGQxID09PSBkLmJsaDsKICAgIH0pLmxlbmd0aDsKICAgIHZhciByID0gNTsKICAgIGQuciA9IHIgKyBjb3VudCAqIDEuMjsKICB9KTsKICByZXR1cm4gW25vZGVzLCBsaW5rc107Cn0="},{"version":3,"sources":["/home/yujiahao/Downloads/visual_work/SZ-COVID-19/src/page/case/methods/dataProcessor.js"],"names":["_","TrackJSON","initData","linkIds","forIn","d","relation","yqtblgx","targetId","blh","relationArr","match","forEach","sourceid","push","nlRange","nl","Number","reason","includes","livelocation","jzd","split","realDate","fbrq","replace","qzDate","aggre","sortkey","total","length","chain","reduce","obj","key","value","name","percent","toFixed","values","orderBy","calculateNodeAndLink","data","links","nodes","nodeIds","map","source","target","count","filter","d1","r"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport TrackJSON from '@/data/track'\n\nexport function initData() {\n    const linkIds = [];\n    _.forIn(TrackJSON, d => {\n        const relation = d.yqtblgx;\n        const targetId = d.blh;\n        if (relation) {\n            const relationArr = relation.match(/\\d+/g);\n            relationArr.forEach(sourceid => {\n                linkIds.push(sourceid, targetId)\n            })\n        }\n    })\n    TrackJSON.forEach(d => {\n        let nlRange = ''\n        const nl = Number(d.nl);\n        if (nl <= 10) {\n            nlRange = '0~10'\n        } else if (nl > 10 && nl <= 20) {\n            nlRange = '10~20'\n        } else if (nl > 20 && nl <= 30) {\n            nlRange = '20~30'\n        } else if (nl > 30 && nl <= 40) {\n            nlRange = '30~40'\n        } else if (nl > 40 && nl <= 50) {\n            nlRange = '40~50'\n        } else {\n            nlRange = '50~以上'\n        }\n        if(d.reason === \"\"){\n            d.reason = '未知'\n        }\n        d.nlRange = nlRange;\n        d.relation = linkIds.includes(d.blh) ? '明确关系' : '单独病例';\n        \n        let livelocation = '未知' \n        if(d.jzd) {\n            if (d.jzd.includes('深圳')) {\n                livelocation = '深圳'\n            } else if (d.jzd.includes('省')) {\n                livelocation = d.jzd.split('省')[0]\n            } else {\n                livelocation = d.jzd;\n            }\n        }\n        d.livelocation = livelocation;\n\n        d.realDate = `2020/${d.fbrq.replace(/月/, '/').replace(/日/, '')}`;\n        // d.origin = d.track && d.track.length > 0 ? d.track[0].from : '深圳';\n        d.qzDate = `${d.fbrq.replace(/月/, '/').replace(/日/, '')}`\n    })\n}\n\nexport function aggre(sortkey) {\n    const total = TrackJSON.length;\n    return _.chain(TrackJSON)\n        .reduce((obj, d) => {\n            const key = d[sortkey] === '' ? '未知' : d[sortkey];\n            const value = obj[key] ? obj[key].value + 1 : 1;\n            obj[key] = {\n                name: key,\n                value,\n                percent: `${(value * 100 / total).toFixed(2)}%`\n            }\n            return obj;\n        }, {})\n        .values()\n        .orderBy('value', 'desc')\n        .value()\n}\n\nexport function calculateNodeAndLink(data) {\n    const links = [];\n    const linkIds = [];\n    const nodes = data;\n    const nodeIds = data.map(d => d.blh);\n    _.forIn(nodes, d => {\n        const relation = d.yqtblgx;\n        const targetId = d.blh;\n        if (relation) {\n            const relationArr = relation.match(/\\d+/g);\n            relationArr.forEach(sourceid => {\n                if(nodeIds.includes(sourceid) && nodeIds.includes(targetId)) {\n                    linkIds.push(sourceid, targetId)\n                    links.push({\n                        source: sourceid,\n                        target: targetId,\n                    })\n                }\n            })\n        }\n    })\n\n    nodes.forEach(d => {\n        const count = linkIds.filter(d1 => d1 === d.blh).length;\n        const r = 5;\n        d.r = r + count * 1.2;\n    })\n\n    return [nodes, links];\n} \n\n"]}]}