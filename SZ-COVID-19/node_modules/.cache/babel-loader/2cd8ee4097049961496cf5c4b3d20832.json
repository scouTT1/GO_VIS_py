{"remainingRequest":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/babel-loader/lib/index.js!/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/yujiahao/Downloads/visual_work/SZ-COVID-19/src/page/information/components/force.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/src/page/information/components/force.vue","mtime":1617781942000},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/cache-loader/dist/cjs.js","mtime":1617788517390},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/babel-loader/lib/index.js","mtime":1617788517170},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/cache-loader/dist/cjs.js","mtime":1617788517390},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/vue-loader/lib/index.js","mtime":1617788568833}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["force.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"forceCom\">\n        <div class=\"forceCom-left\">\n            <div class=\"filter\">\n                <Section title=\"筛选条件\">\n                    <div\n                        v-for=\"item in filterCondition\"\n                        class=\"filter-item\"\n                        :key=\"item.name\"\n                    >\n                        <span class=\"filter-item-name\">{{item.name}}</span>：\n                        <span class=\"filter-item-value\">{{item.value}}</span>\n                    </div>\n                </Section>\n            </div>\n            <div class=\"legend\">\n                <div class=\"legend-item\">\n                    <div class=\"legend-item-icon\">\n                        <div class=\"legend-link min\"></div>\n                    </div>\n                    <div class=\"legend-item-desc\">病例关系</div>\n                </div>\n                <div class=\"legend-item\">\n                    <div class=\"legend-item-icon\">\n                        <div class=\"legend-circle min\">0</div>\n                    </div>\n                    <div class=\"legend-item-desc\">病例个体，点击选择</div>\n                </div>\n                <div class=\"legend-item\">\n                    <div class=\"legend-item-icon\">\n                        <div class=\"legend-pointer\"></div>\n                    </div>\n                    <div class=\"legend-item-desc\">指针，可拨动</div>\n                </div>\n                <div class=\"legend-item\">\n                    <div class=\"legend-item-icon\">\n                        <div class=\"legend-filter-one min\">条件</div>\n                    </div>\n                    <div class=\"legend-item-desc\">一级筛选条件，点击选择</div>\n                </div>\n                <div class=\"legend-item\">\n                    <div class=\"legend-item-icon\">\n                        <div class=\"legend-time min\"></div>\n                    </div>\n                    <div class=\"legend-item-desc\">二级筛选条件(确诊时间)，拨动指针选择</div>\n                </div>\n                <div class=\"legend-item\">\n                    <div class=\"legend-item-icon\">\n                        <div class=\"legend-filter-two min\">条件</div>\n                    </div>\n                    <div class=\"legend-item-desc\">二级筛选条件(其他)，点击选择</div>\n                </div>\n            </div>\n        </div>\n        <div id=\"chart\" ref='chart'></div>\n        <div class=\"info\">\n            <Section title=\"病例信息\" class=\"infoData\">\n                <div v-if=\"caseDetail.length\"\n                    class=\"info-container\"\n                >\n                    <div\n                        v-for=\"item in caseDetail\"\n                        :key=\"item.key\"\n                        class=\"info-item\"\n                    >\n                    <span class=\"info-item-key\">{{item.key}}</span>：\n                    <span class=\"info-item-value\">{{item.value}}</span>\n                    </div>\n                </div>\n                <NoData v-else title=\"请选择病例\" />\n            </Section>\n            <Section title=\"选定病例关系\" class=\"treeData\" height=\"100%\">\n                <div class=\"tree-container\">\n                    <Tree :data=\"treeData\" />\n                </div>\n            </Section>\n        </div>\n    </div>\n    \n</template>\n\n<script>\n    import * as d3 from 'd3'\n    import * as d3Fisheye from 'd3-fisheye'\n    import _ from 'lodash'\n    import TrackJSON from '@/data/track'\n    import province from '@/data/province'\n    // import Bar from './bar'\n    import Tree from './tree'\n    import Section from '@/components/section'\n    import NoData from '@/components/noData'\n    import { initData, calculateNodeAndLink } from '../methods/dataProcessor'\n\n    export default {\n        name: 'Force',\n        components: {\n            Section,\n            // Bar,\n            NoData,\n            Tree,\n        },\n        data() {\n            initData();\n            const fisheyeRadius = 80;\n            const timeRange = d3.extent(TrackJSON, d => {\n                return new Date(d.realDate).getTime()\n            });\n            this.TIME_RANGE = [...timeRange]\n            return {\n                treeData: [],\n                fisheyeRadius,\n                deminArr: [],\n                colorObj: {},\n                disbaled: [],\n                filterObj: {},\n                timeRange: timeRange,\n                caseDetail: [],\n                filterCondition: [],\n            }\n        },\n        methods: {\n            drag: simulation => {\n                const dragstarted = d => {\n                    if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n                    d.fx = d.x;\n                    d.fy = d.y;\n                }\n                \n                const dragged = d => {\n                    d.fx = d3.event.x;\n                    d.fy = d3.event.y;\n                }\n                \n                const dragended = d => {\n                    if (!d3.event.active) simulation.alphaTarget(0);\n                    d.fx = null;\n                    d.fy = null;\n                }\n                \n                return d3.drag()\n                    .on(\"start\", dragstarted)\n                    .on(\"drag\", dragged)\n                    .on(\"end\", dragended);\n            },\n            initChart() {\n                const useLength = Math.min(this.width, this.height) \n\n                d3.select('#chart').select('svg').remove()\n                \n                this.svg = d3.select('#chart')\n                    .append(\"svg\")\n                    .attr(\"viewBox\", [0, 0, useLength, useLength])\n                    .attr('width', useLength)\n                    .attr('height', useLength)\n                    .append('g')\n                    .attr('transform', `translate(${useLength/2}, ${useLength/2})`)\n                    \n                    const gradient = d3.select('#chart>svg')\n                        .append('defs')\n                        .append('radialGradient')\n                        .attr('id', 'radial')\n\n                    gradient\n                        .append('stop')\n                        .attr('offset', '0%')\n                        .attr('style', 'stop-color: #1f468b;')\n                    gradient\n                        .append('stop')\n                        .attr('offset', '100%')\n                        .attr('style', 'stop-color: #0e2244;')\n\n                    this.svg\n                        .append('circle')\n                        .attr('cx', 0)\n                        .attr('cy', 0)\n                        .attr('r', this.forceRadius[1])\n                        .classed('circle-bg', true)\n\n                    this.svg\n                        .append('g')\n                        .classed('fisheye-bg', true)\n                        .append('circle')\n                        .attr('r', this.fisheyeRadius)\n                        .attr('fill', 'none')\n                        .attr('display', 'none')\n\n                this.selectData = TrackJSON;\n                this.initTimeCircle();\n                this.initDemiCircle();\n                this.createForce();\n\n                // 默认选中确诊时间\n                this.svg.select('g[data-sortKey=qzDate]')\n                    .dispatch('click')\n            },\n            initTimeCircle(type) {\n                const gapTimeArr = _.chain(TrackJSON)\n                    .reduce((obj, d) => {\n                        obj[d.realDate] = {\n                            name: d.realDate,\n                            value: obj[d.realDate] ? obj[d.realDate].value + 1 : 1,\n                        }\n                        return obj;\n                    }, {})\n                    .values()\n                    .orderBy(d => new Date(d.name).getTime())\n                    .value();\n\n                const oneDay = 24 * 3600 * 1000;\n                const timeArr = [];\n                gapTimeArr.forEach((d, i) => {\n                    timeArr.push(d);\n                    if(gapTimeArr[i+1]) {\n                        const timeItemArr = [d.name, gapTimeArr[i+1].name].map(d1 => new Date(d1).getTime())\n                        const timeSpace = timeItemArr[1] - timeItemArr[0] - oneDay;\n                        const dayCount = timeSpace/oneDay;\n                        for(let i = 1; i <= dayCount; i++){\n                            timeArr.push({\n                                name: new Date(timeItemArr[0] + i * oneDay).toLocaleDateString(),\n                                value: d.value\n                            })\n                        }\n                    }\n                })\n\n                const isQZDate = type === 'qzDate'\n\n                if (type && !isQZDate) {\n                    timeArr.length = 0\n                    _.chain(TrackJSON)\n                        .map(type)\n                        .countBy()\n                        .map((d, k) => ({\n                            name: k,\n                            value: d,\n                            sortkey: type,\n                        }))\n                        .orderBy('name')\n                        .forEach(d => {\n                            timeArr.push(d)\n                        })\n                        .value()\n                }\n\n                const [min, max] = d3.extent(timeArr, d => d.value);\n                const color = d3.scaleLinear()\n                    .domain([min, max / 2, max])\n                    .range(['#009688', '#ffc107', '#ff0000'])\n\n                const pie = d3.pie()\n                    .padAngle(0)\n                    .sort(null)\n                    .value(d => type && !isQZDate ? d.value : 1)\n\n                const arc = d3.arc()\n                    .innerRadius(this.timeRadius[0])\n                    .outerRadius(this.timeRadius[1]);\n\n                if(type) {\n                    pie.padAngle(0.01)\n                    // arc.cornerRadius(10)\n                }\n\n                const arcs = pie(timeArr);\n\n                this.svg.select('g.timeLine').remove()\n\n                const container = this.svg.append('g')\n                    .classed('timeLine', true);\n                \n                const _this = this\n\n                const arcG = container\n                    .selectAll('g.timelineArc')\n                    .data(arcs)\n                    .enter()\n                    .append('g')\n                    .classed('timelineArc', true)\n                    .on('click', function(d) {\n                        if (!type || isQZDate) return\n                        const { name } = d.data;\n                        const arc = d3.select(this)\n                            .select('path.normal')\n                        const arcBigger = d3.select(this)\n                            .select('path.bigger')\n\n                        if(_this.filterObj[type].includes(name)) {\n                            arc.classed('arc-none', false)\n                            arcBigger.classed('arc-none', true)\n                            _this.filterObj[type] = _this.filterObj[type].filter(d => d !== name);\n                        } else {\n                            arc.classed('arc-none', true)\n                            arcBigger.classed('arc-none', false)\n                            _this.filterObj[type].push(name);\n                        }\n                        _this.selectType();\n                    })\n\n                arcG.append('path')\n                    .attr(\"fill\", d => type && !isQZDate ?  '#116cd5' : color(d.data.value))\n                    .attr(\"d\", arc)\n                    .attr(\"stroke\", () => type ? '#aaa' : 'none')\n                    .attr('cursor', () => type ? 'pointer' : null)\n                    .classed('normal', true)\n                    .transition()\n                    .duration(300)\n                    .ease(d3.easeCubicIn)\n                    .attrTween('d',function(d){\n                        const a = d3.interpolate(d.startAngle,d.endAngle);\n                        return function(t){\n                            d.endAngle   = a(t);\n                            return arc(d);\n                        };\n                    })\n\n                const arcBigger = d3.arc()\n                    .innerRadius(this.timeRadius[0])\n                    .outerRadius(this.timeRadius[1] + 5);\n\n                arcG.append('path')\n                    .attr(\"fill\", d => type ? '#116cd5' : color(d.data.value))\n                    .attr(\"d\", arcBigger)\n                    .attr('cursor', () => type ? 'pointer' : null)\n                    .classed('bigger', true)\n                    .classed('arc-none', true)\n\n                const text = arcG.append('text')\n                    .attr(\"dy\", \"0.35em\")\n\n                text.append('path')\n                    .attr('fill', 'none')\n                    .attr('id', d => `hiddenArc${d.data.name}`)\n                    .attr('d', d => {\n                        const {startAngle, endAngle} = d;\n                        const [innerRadius, outerRadius] = this.timeRadius;\n                        const angles = [startAngle, endAngle].map(d1 => d1 - Math.PI / 2)\n                        const r = (innerRadius + outerRadius) / 2;\n                        const middleAngle = (angles[1] + angles[0]) / 2\n                        const invertDirection = middleAngle > 0 && middleAngle < Math.PI\n                        if (invertDirection) angles.reverse()\n                        const path = d3.path()\n                        path.arc(0, 0, r, angles[0], angles[1], invertDirection)\n                        return path.toString()\n                    })\n                text.append('textPath')\n                    .attr('text-anchor', 'middle')\n                    .attr('startOffset', '50%')\n                    .attr('font-size', '9px')\n                    .attr('fill', '#fff')\n                    .attr('href', d => `#hiddenArc${d.data.name}`)\n                    .text(d => d.data.name.replace('2020/', ''))\n                    .attr('display', function(d) {\n                        const { width } = this.getBoundingClientRect()\n                        const rad = d.endAngle - d.startAngle\n                        const [innerRadius] = _this.timeRadius;\n                        const calWidth =  innerRadius * rad\n                        return type && width >= calWidth ? 'none' : null\n                    });\n\n                const radius = this.timeRadius[1] + (this.deminRadius[0] - this.timeRadius[1]) / 2;\n\n                const indexScale = d3.scaleLinear()\n                        .domain([0, 1])\n                        .range([0, timeArr.length - 1]);\n\n                function dragStart(){\n                    let rad = Math.atan2(d3.event.y, d3.event.x);\n                    d3.select(this)\n                        .style('transform', () => {\n                            const x = radius * Math.cos(rad);\n                            const y = radius * Math.sin(rad);\n                            rad += Math.PI / 2;\n                            if(rad < 0)  rad = Math.PI * 2 + rad\n                            const scale = rad / (Math.PI * 2) * 360;\n                            return `translate(${x}px, ${y}px) rotate(${scale}deg)`\n                        })\n                }\n\n                const dragEnd = (index) => {\n                    let rad = Math.atan2(d3.event.y, d3.event.x);\n                    rad += Math.PI / 2;\n                    if(rad < 0)  rad = Math.PI * 2 + rad\n                    const scale = rad / (Math.PI * 2);\n                    // const timeIndex = Math.ceil(indexScale(scale));\n                    const timeIndex = parseInt(indexScale(scale));\n                    const timeItem = new Date(timeArr[timeIndex].name).getTime();\n                    // if(timeItem <= this.timeRange[0]) {\n                        // index = 0\n                    // } else if(timeItem >= this.timeRange[1]) {\n                        // index = 1;\n                    // }\n                    this.timeRange[index] = timeItem;\n                    this.selectType();\n                }\n\n                container.append('polygon')\n                    .attr('fill', 'yellow')\n                    .attr('fill', '#fff')\n                    .attr('cursor', 'pointer')\n                    .attr('points', '0,10 -8,-8 8,-8')\n                    .attr('transform', () => {\n                        return `translate(${0}, ${radius * Math.sin( - Math.PI / 2)})`\n                    })\n                    .attr('display', () => type && !isQZDate ? 'none' : null)\n                    .call(\n                        d3.drag()\n                        .on(\"drag\", dragStart)\n                    )\n\n                container.append('polygon')\n                    .attr('fill', 'red')\n                    .attr('fill', '#1778e8')\n                    .attr('cursor', 'pointer')\n                    .attr('points', '0,10 -8,-8 8,-8')\n                    .attr('transform', () => {\n                        return `translate(${0}, ${radius * Math.sin( - Math.PI / 2)})`\n                    })\n                    .attr('display', function() {\n                        return type && !isQZDate ? 'none' : null})\n                    .call(\n                        d3.drag()\n                        .on(\"drag\", dragStart)\n                        .on(\"end\",  () =>  dragEnd(1))\n                    )\n            },\n            initDemiCircle() {\n                const deminArr = [{\n                    name: '染病原因',\n                    sortkey: 'reason',\n                }, {\n                    name: '确诊时间',\n                    sortkey: 'qzDate',\n                },\n                {\n                    name: '年龄',\n                    sortkey: 'nlRange',\n                }, \n                {\n                    name: '来源地',\n                    sortkey: 'origin'\n                },\n                {\n                    name: '病例关系',\n                    sortkey: 'relation',\n                }]\n\n                deminArr.forEach(d => {\n                    this.filterObj[d.sortkey] = [];\n                })\n\n                this.deminArr = deminArr\n\n                const deminData = _.chain(deminArr)\n                    .map(d => {\n                        const key = d.sortkey;\n                        let useData = TrackJSON;\n                        if (d.name === '来源地(国外)') {\n                            useData = TrackJSON.filter(d1 => !province.includes(d1[key]))\n                        } else if(d.name === '来源地(国内)') {\n                            useData = TrackJSON.filter(d1 => province.includes(d1[key]))\n                        }\n                        const deminDetailArr = _.chain(useData)\n                            .map(key)\n                            .uniq()\n                            .map(d1 => ({\n                                name: d1,\n                                type: d.name,\n                                sortkey: key,\n                            }))\n                            .value();\n\n                        if(key === 'nlRange') {\n                            deminDetailArr.sort((a, b) => {\n                                const arr = [a, b].map(d1 => Number(d1.name.split('~')[0]));\n                                return arr[0] - arr[1];\n                            })\n                        }\n                        return deminDetailArr;\n                    })\n                    .flatten()\n                    .value()\n\n                this.forignOrigin = deminData.filter(d => d.type === \"来源地(国外)\")\n                    .map(d => d.name)\n\n                const pie = d3.pie()\n                    .padAngle(.005)\n                    .sort(null)\n                    .value(d => {\n                        if (['origin'].includes(d.sortkey)) return .8\n                        return 1\n                    })\n\n                const arc = d3.arc()\n                    // .cornerRadius(10)\n                    // .padAngle(0)\n                    .innerRadius(this.deminRadius[0])\n                    .outerRadius(this.deminRadius[1]);\n\n                const arcBigger = d3.arc()\n                    .innerRadius(this.deminRadius[0])\n                    .outerRadius(this.deminRadius[1] + 5);\n\n                const arcs = pie(deminArr);\n\n                const container = this.svg\n                    .append('g')\n                    .classed('sunBurst', true)\n\n                const _this = this\n\n                const arcG = container\n                    .selectAll('g.sunBurstArc')\n                    .data(arcs)\n                    .enter()\n                    .append('g')\n                    .classed('sunBurstArc', true)\n                    .attr('data-sortKey', d => d.data.sortkey)\n                    .on('click', function(d) {\n                        const {sortkey} = d.data;\n                        const arc = d3.select(this)\n                            .select('path.normal')\n                        const arcBigger = d3.select(this)\n                            .select('path.bigger')\n                        const arcG = d3.select(this.parentNode)\n                        if (arcBigger.classed('arc-none')) {\n                            arcG.selectAll('path.normal')\n                                .classed('arc-none', false)\n                            arcG.selectAll('path.bigger')\n                                .classed('arc-none', true)\n                            arcBigger.classed('arc-none', false)\n                            arc.classed('arc-none', true)\n                            _this.initTimeCircle(sortkey === 'qzDate' ? undefined : sortkey)\n                        } else {\n                            arcG.selectAll('path.normal')\n                                .classed('arc-none', false)\n                            arcG.selectAll('path.bigger')\n                                .classed('arc-none', true)\n                            _this.initTimeCircle()\n                        }\n                        // 重置选择的时间范围\n                        _this.timeRange = [..._this.TIME_RANGE]\n                        _this.selectType()\n                    })\n\n\n                arcG.append('path')\n                    .attr('fill', '#2f50a5')\n                    .attr(\"d\", arc)\n                    .attr('stroke','none')\n                    .classed('normal', true)\n                    .classed('arc-none', false)\n                    \n\n                arcG.append('path')\n                    .attr('fill', '#2f50a5')\n                    .attr(\"d\", arcBigger)\n                    .attr('stroke','none')\n                    .classed('bigger', true)\n                    .classed('arc-none', true)\n                    \n                \n                const text = arcG.append(\"text\")\n                    .attr(\"dy\", \"0.35em\")\n\n                text.append('path')\n                    .attr('fill', 'none')\n                    .attr('id', d => `hiddenArc${d.data.name}_${d.data.type}`)\n                    .attr('d', d => {\n                        const {startAngle, endAngle} = d;\n                        const [innerRadius, outerRadius] = this.deminRadius;\n                        const angles = [startAngle, endAngle].map(d1 => d1 - Math.PI / 2)\n                        const r = (innerRadius + outerRadius) / 2;\n                        const middleAngle = (angles[1] + angles[0]) / 2\n                        const invertDirection = middleAngle > 0 && middleAngle < Math.PI\n                        // let invertDirection = '';\n                        // if (typeDir[d.data.type]) {\n                        //     invertDirection = typeDir[d.data.type];\n                        // } else {\n                        //     invertDirection = middleAngle > 0 && middleAngle < Math.PI\n                        //     typeDir[d.data.type] = invertDirection;\n                        // }\n                        if (invertDirection) angles.reverse()\n                        const path = d3.path()\n                        path.arc(0, 0, r, angles[0], angles[1], invertDirection)\n                        return path.toString()\n                    })\n\n                text.append('textPath')\n                    .attr('startOffset', '50%')\n                    .attr('href', d => `#hiddenArc${d.data.name}_${d.data.type}`)\n                    .text(d => d.data.name);\n\n            },\n            pythag(r, b, coord) {\n                const radius = this.forceRadius[1];\n                const hyp2 = Math.pow(radius, 2);\n                r += 5;\n                b = Math.min(radius * 2 - r, Math.max(r, b));\n                var b2 = Math.pow(\n                    (b - radius), 2\n                ),\n                a = Math.sqrt(hyp2 - b2);\n                coord = Math.max(\n                    radius - a + r,\n                    Math.min(a + radius - r, coord)\n                );\n                return coord;\n            },\n            createForce() {\n                this.simulation = d3.forceSimulation()\n                    .force(\"link\", d3.forceLink()\n                        .id(d => d.blh)\n                    )\n                    .force(\"charge\", \n                        d3.forceManyBody().strength(-20)\n                    )\n                    .force(\"x\", d3.forceX())\n                    .force(\"y\", d3.forceY())\n                    // .force('center', d3.forceCenter(0, 0))// 向心力\n                    // .force('collide',d3.forceCollide()  // 圆的碰撞力\n                    //     .radius(10)  // 根据指定的半径创建一个碰撞力。默认为 1\n                    // )\n                    // .force('r', d3.forceRadial(\n                    //         this.forceRadius[1],0,0\n                    //     ).strength(.5))\n                    .on(\"tick\", () => {\n                        d3.selectAll('.circleG')\n                            .attr('transform', d => {\n                                //  d.x = this.pythag(d.r, d.y, d.x); \n                                // d.y = this.pythag(d.r, d.x, d.y);\n                                return `translate(${d.x}, ${d.y})`\n                            });\n\n                        d3.selectAll('.linkItem')\n                            .attr('transform', d => {\n                                return `translate(${d.source.x}, ${d.source.y})`\n                            })\n                            .select('line')\n                            .attr(\"x1\", 0)\n                            .attr(\"y1\", 0)\n                            .attr(\"x2\", d => d.target.x - d.source.x)\n                            .attr(\"y2\", d => d.target.y - d.source.y);\n                        \n                        d3.selectAll('.linkItem')\n                            .select('text')\n                            .attr('dx', d => (d.target.x - d.source.x) / 2)\n                            .attr('dy', d => (d.target.y - d.source.y) / 2)\n                    });\n\n                const fisheye = d3Fisheye.radial()\n                    .radius(this.fisheyeRadius)\n                    .distortion(2)\n                    .smoothing(0.5);\n\n                const _this = this\n\n                const forceContainer = this.svg.append('g')\n                    .classed('force', true)\n\n                this.svg.on('mousemove', function() {\n                    const mouse = d3.mouse(this);\n                    _this.simulation.stop()\n                    fisheye.focus(mouse);\n                    d3.selectAll('.circleG').each(d => {\n                            d.fisheye = fisheye([d.x, d.y]);\n                        })\n                        .attr('transform', d => `translate(${d.fisheye[0]}, ${d.fisheye[1]})`)\n                        .attr('opacity', d => d.fisheye[2] === 1 ? '.2' : '1')\n                        \n                    d3.selectAll('.circleG')\n                        .select('circle')\n                        .attr('r', d => {\n                            const r = d.fisheye[2] * d.r;\n                            if(r>12) {\n                                return 12;\n                            }\n                            return r\n                        });\n\n                    d3.selectAll('.circleG')\n                        .select('text')\n                        .attr('font-size', d => {\n                            const r =  d.fisheye[2] * 5;\n                            if(r>9) {\n                                return 9;\n                            }\n                            return r\n                        });\n\n                    d3.selectAll('.linkItem')\n                        .attr('transform', d => {\n                            return `translate(${d.source.fisheye[0]}, ${d.source.fisheye[1]})`\n                        })\n                        .select('line')\n                        .attr(\"x1\", 0)\n                        .attr(\"y1\", 0)\n                        .attr(\"x2\", d => d.target.fisheye[0] - d.source.fisheye[0])\n                        .attr(\"y2\", d => d.target.fisheye[1] - d.source.fisheye[1])\n                        .attr('opacity', d => (d.target.fisheye[2] === 1 || d.source.fisheye[2] === 1) ? '.2' : '1')\n\n                    d3.selectAll('.linkItem')\n                        .select('text')\n                        .attr('font-size', d => d.source.fisheye[2] * 5)\n                        .attr('dx', d => (d.target.fisheye[0] - d.source.fisheye[0]) / 2)\n                        .attr('dy', d => (d.target.fisheye[1] - d.source.fisheye[1]) / 2)\n                        .attr('transform', d => {\n                            const { atan, abs, PI} = Math\n                            const [x1, y1] = d.source.fisheye\n                            const [x2, y2] = d.target.fisheye\n                            const x = abs(x2 - x1)\n                            const y = abs(y2 - y1)\n                            const rad = atan(y / x)\n                            const ang = 180 / PI * rad\n                            return `rotate(${ang}, ${(x2 - x1) / 2}, ${(y2 - y1) / 2})`\n                        })\n                        .attr('display', d => d.target.fisheye[2] === 1 ? 'none' : null)\n\n                    const mouseR = Math.sqrt(mouse.reduce((c, d) => c + Math.pow(d, 2), 0))\n                    \n                    // 鱼眼背景\n                    const fisheyeBg = d3.select('.fisheye-bg>circle')\n                            .attr('cx', mouse[0])\n                            .attr('cy', mouse[1])\n                            .attr('display', null)\n\n                    // 鼠标移出后移除效果\n                    if (mouseR > (_this.forceRadius[1])) {\n                        fisheyeBg.attr('display', 'none')\n                        _this.simulation.restart();\n\n                        d3.selectAll('.circleG')\n                            .attr('transform', d => `translate(${d.x}, ${d.y})`)\n                            .attr('opacity', 1)\n\n                        d3.selectAll('.circleG')\n                            .select('circle')\n                            .attr('r', d => d.r);\n\n                        d3.selectAll('.circleG')\n                            .select('text')\n                            .attr('font-size', 5);\n\n                        d3.selectAll('.linkItem')\n                            .attr('transform', d => `translate(${d.source.x}, ${d.source.y})`)\n                            .select('line')\n                            .attr('opacity', 1)\n                            .attr(\"x1\", 0)\n                            .attr(\"y1\", 0)\n                            .attr(\"x2\", d => d.target.x - d.source.x)\n                            .attr(\"y2\", d => d.target.y - d.source.y)\n                        \n                        d3.selectAll('.linkItem')\n                            .select('text')\n                            .attr('font-size', 5)\n                    }\n                })\n\n                this.linkContainer = forceContainer.append('g').classed('links', true);\n                this.nodeContainer = forceContainer.append('g').classed('nodes', true);\n            },\n            draw() {\n                this.treeData = [];\n                this.calcualteDetailInfo();\n                this.calcualteDetailInfo(-1);\n                const [nodes, links] = calculateNodeAndLink(this.selectData);\n\n                this.simulation.nodes(nodes);\n                this.simulation.force(\"link\").links(links);\n\n                const linkUpdate = this.linkContainer\n                    .selectAll(\".linkItem\")\n                    .data(links, d => `${d.source.blh}_${d.target.blh}`);\n                \n                const linkG = linkUpdate.enter()\n                    .append('g')\n                    .classed('linkItem', true);\n\n                linkG.append(\"line\")\n\n                linkG.append('text')\n                    .attr('font-size', 5)\n                    .attr('x', 0)\n                    .attr('y', 0)\n                    .attr('dx', d => (d.target.x - d.source.x) / 2)\n                    .attr('dy', d => (d.target.y - d.source.y) / 2)\n                    .attr('display', 'none')\n                    .text(d => {\n                        let showText = d.target.blh;\n                        if(d.target.yqtblgx) {\n                            const blharr = d.target.yqtblgx.match(/(\\d+、?)+/g)[0];\n                            showText = d.target.yqtblgx.split(blharr)[1];\n                        }\n                        return showText\n                    })\n\n                linkUpdate.exit().remove();\n\n                const nodeUpdate = this.nodeContainer\n                    .selectAll(\".circleG\")\n                    .data(nodes, d => d.blh)\n\n                nodeUpdate.select('circle')\n                        .attr('r', d => d.r)\n\n                const newAddNode = nodeUpdate.enter()\n                    .append('g')\n                    .classed('circleG', true)\n                    .attr('cursor', 'pointer')\n                    .on('click', d => {\n                        const relationArr = links.reduce((arr, d1) => {\n                            if(d1.source.blh === d.blh) {\n                                arr.push(d1.target)\n                            } else if( d1.target.blh === d.blh ){\n                                arr.push(d1.source)\n                            }\n                            return arr;\n                        }, [])\n                        var obj = {\n                            name: d.blh,\n                            children: [],\n                        }\n                        relationArr.forEach(d => {\n                            const blharr = d.yqtblgx.match(/(\\d+、?)+/g)[0];\n                            const showText = d.yqtblgx.split(blharr)[1];\n                            obj.children.push({\n                                name: `${d.blh}(${showText})`,\n                            })\n                        })\n                        this.treeData = obj;\n                        this.calcualteDetailInfo(d)\n                    })\n                    .call(this.drag(this.simulation))\n                    .on('mouseout', function() {\n                        d3.event.preventDefault()\n                        d3.event.stopImmediatePropagation()\n                        return false\n                    })\n\n                newAddNode.append(\"circle\")\n                    .attr('r', d => d.r)\n\n                newAddNode.append(\"text\")\n                    .attr('font-size', 5)\n                    .text(d => {\n                        let showText = d.blh;\n                        return showText\n                    })\n\n                nodeUpdate.exit().remove();\n                    \n                this.simulation.alpha(.3)\n                    .alphaTarget(0)\n                    .restart();\n            },\n            selectType() {\n                console.log(this.timeRange.map(d => new Date(d).toLocaleDateString()));\n                this.selectData = TrackJSON.filter(d => {\n                    let isKeep = true;\n                    Object.keys(this.filterObj)\n                        .filter(key => this.filterObj[key].length > 0)\n                        .forEach(key => {\n                            isKeep && (isKeep = this.filterObj[key].includes(d[key]))\n                        })\n                    return isKeep;\n                }).filter(d => {\n                    const timeStap = new Date(d.realDate).getTime();\n                    return timeStap >= this.timeRange[0] && timeStap <= this.timeRange[1];\n                });\n                const strengthScale = d3.scaleLinear().domain([TrackJSON.length, 0]).range([18, 40])\n                const forceCount = strengthScale(this.selectData.length);\n                this.simulation.force(\"charge\", \n                    d3.forceManyBody().strength(-forceCount)\n                )\n                this.draw();\n            },\n            calcualteData() {\n                const height = this.$refs.chart.offsetHeight;\n                const width = this.$refs.chart.offsetWidth;\n                const radius = Math.min(height, width) / 2;\n                this.width = width;\n                this.height = height;\n                this.forceRadius = [0, radius - 70];\n                this.timeRadius = [radius - 70, radius - 50] ;\n                this.deminRadius = [radius - 30, radius - 10];\n            },\n            calcualteDetailInfo(d) {\n                let info = [];\n                if(d) {\n                    const include = ['blh','xb', 'nl',  'bk', 'fbrq', 'rysj', 'rbyy', 'bzzzytjd'];\n                    const descObj = {\n                        \"yqtblgx\": \"与其他病例关系\",\n                        \"zwhsjqj\": \"在武汉时间\",\n                        \"rbyy\": \"染病原因\",\n                        \"bzzzytjd\": \"备注\",\n                        \"bk\": \"病况\",\n                        \"xb\": \"性别\",\n                        \"rysj\": \"入院时间\",\n                        \"lssj\": \"来深时间\",\n                        \"fbingsj\": \"发病时间\",\n                        \"fbrq\": \"确诊日期\",\n                        \"jzd\": \"居住地\",\n                        \"fbusj\": \"发布时间\",\n                        \"nl\": \"年龄\",\n                        \"blh\": \"病例号\",\n                        \"nationality&native\":\"国籍和籍贯（国内有籍贯者记录籍贯）\",\n                        \"track\":\"途径地\",\n                        \"track_time\":\"途径地的时间\",\n                        \"track_trans\":\"途径交通工具\",\n                        \"treatment_hospital\":\"救治医院\"\n                    }\n                    include.forEach(d1 => {\n                        info.push({\n                            key: descObj[d1],\n                            value: d === -1 ? '' : d[d1] || '暂无',\n                        })\n                    })\n                    this.caseDetail = info\n                } else {\n                    const filterArr = [];\n                    const deminArr = this.deminArr.map(d => ({\n                        name: d.name,\n                        sortkey: d.name === '来源地(国外)' ? 'forignOrigin' : d.sortkey,\n                    }))\n\n                    const dateRange = this.timeRange.join('~') === this.TIME_RANGE.join('~')\n                        ? []\n                        : [this.timeRange.map(d => {\n                            const date  = new Date(d)\n                            return `${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()}`\n                            }).join('~')]\n                    \n                    const filterObj = {\n                        ...this.filterObj,\n                        qzDate: dateRange,\n                    }\n                    \n                    _.chain(filterObj)\n                        .keys()\n                        .forIn(key => {\n                            filterArr.push({\n                                name: deminArr.find(d => d.sortkey === key).name,\n                                value: filterObj[key].join(', ') || '全部',\n                            })\n                        })\n                        .value();\n                    filterArr.push({\n                        name: '病例数量',\n                        value: this.selectData.length,\n                    })\n                    this.filterCondition = filterArr;\n                }\n            },\n            handleReset() {\n                const chartContainer = d3.select('#chart')\n                    .on('click.reset', () => {\n                        if(d3.event.target === chartContainer\n                            || d3.event.target === chartContainer.querySelector('svg')) {\n                                this.timeRange = d3.extent(TrackJSON, d => {\n                                    return new Date(d.realDate).getTime()\n                                });\n                                this.initChart()\n                                this.selectType();\n                            }\n                    })\n                    .node()\n            },\n        },\n        mounted() {\n            this.calcualteData()\n            this.initChart();\n            this.selectType();\n            this.handleReset()\n        }\n    }\n</script>\n\n<style lang=\"less\">\n    .forceCom{\n        display: flex;\n        padding-top: 20px;\n        align-items: center;\n        height: 100%;\n        position: relative;\n    }\n    .forceCom-left {\n        display: flex;\n        justify-content: space-between;\n        flex-direction: column;\n        height: 100%;\n        width: 20%;\n    }\n    .filter {\n        width: 100%;\n        font-size: 14px;\n        .section {\n            width: 100%;\n            padding-bottom: 10px;\n            .section-body {\n                min-height: 150px;\n                width: 100%;\n                line-height: 2.5em;\n                display: flex;\n                justify-content: center;\n                flex-direction: column;\n            }\n        }\n        .filter-item {\n            width: 100%;\n            display: flex;\n            .filter-item-name{\n                text-align: right;\n                width: 80px;\n                font-size: 14px;\n            }\n            .filter-item-value{\n                flex: 1;\n            }\n        }\n    }\n    #chart{\n        width: 50%;\n        height: 100%;\n        min-width: 700px;\n        min-height: 700px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n    }\n    .legend{\n        .legend-item{\n            display: flex;\n            align-items: center;\n            margin-top: 10px;\n            .legend-item-icon{\n                width: 40px;\n                text-align: center;\n                &>div{\n                    display: inline-block;\n                }\n                .legend-circle{\n                    height: 22px;\n                    width: 22px;\n                    line-height: 22px;\n                    text-align: center;\n                    border-radius: 40px;\n                    font-size: 12px;\n                    color: #fff;\n                    background: rgba(255, 0, 0, 0.45);\n                    border: solid 1px rgba(255, 255, 255, 0.5);\n                }\n                .legend-link{\n                    margin-bottom:3px;\n                    height: 1px;\n                    width: 40px;\n                    background: rgba(255, 0, 0, 0.45);\n                }\n                .legend-pointer{\n                    width: 0;\n                    height: 0;\n                    border: 8px solid transparent;\n                    border-top: 14px solid #1778e8;\n                    transform: translateY(6px);\n                }\n                .legend-time{\n                    height: 20px;\n                    width: 40px;\n                    background: linear-gradient(to right, #009688, #ffc107, #ff0000);\n                }\n                .min {\n                    transform: scale(.8)\n                }\n                .legend-filter-one{\n                    height: 20px;\n                    width: 40px;\n                    background: #2f50a5;   \n                }\n                .legend-filter-two{\n                    height: 20px;\n                    width: 40px;\n                    background: #116cd5;\n                    border: solid 1px #aaa;\n                }\n            }\n            .legend-item-desc{\n                margin-left: 10px;\n            }\n        }\n    }\n    .force{\n        circle {\n            stroke: #fff;\n            stroke: rgba(255, 255, 255, 0.5);\n            stroke-width: 1;\n            fill: #bf5658;\n            fill: rgba(255, 0, 0, 0.45);\n            cursor: pointer;\n        }\n        text{\n            fill: #fff;\n            text-anchor: middle;\n        }\n        .linkItem{\n            stroke: rgba(255, 0, 0, 0.45);\n            stroke-width: 1;\n            text{\n                stroke: #fff;\n                stroke-width: .2;\n            }\n        }\n    }\n\n    .timeLine {\n        .timelineArc {\n            transition: .3s;\n        }\n    }\n\n    .sunBurst {\n        .sunBurstArc {\n            transition: .3s;\n            &>path {\n                cursor: pointer;\n            }\n            &>text {\n                pointer-events: none;\n                text-anchor: middle;\n                user-select: none;\n                fill: #fff;\n            }\n        }\n    }\n\n    .info {\n        height: 100%;\n        flex: 1;\n        display: flex;\n        margin-left: 30px;\n        flex-direction: column;\n        justify-content: space-between;\n        .infoData{\n            height: 50%;\n        }\n        .info-container{\n            min-height: 200px;\n            display: flex;\n            height: 100%;\n            flex-direction: column;\n            justify-content: space-around;\n        }\n        .info-item{\n            height: 50%;\n            line-height: 30px;\n            display: flex;\n            .info-item-key{\n                display: inline-block;\n                width: 100px;\n                font-weight: bolder;\n                font-size: 14px;\n                text-align: right;\n            }\n            .info-item-value{\n                flex: 1;\n                white-space: pre-wrap;\n            }\n        }\n        .treeData {\n            height: 50%;\n            margin-bottom: 0;\n            .tree-container{\n                height: 100%;\n            }\n        }\n    }\n    .circle-bg {\n        fill:url(#radial)\n    }\n    .fisheye-bg>circle {\n        fill: #4f659b;\n        opacity: .3;\n    }\n    .arc-none {\n        display: none;\n    }\n</style>"],"sourceRoot":"src/page/information/components"}]}