{"remainingRequest":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/yujiahao/Downloads/visual_work/SZ-COVID-19/src/page/comparison/components/aaa.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/src/page/comparison/components/aaa.vue","mtime":1618921434245},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/cache-loader/dist/cjs.js","mtime":1617788517390},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/babel-loader/lib/index.js","mtime":1617788517170},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/cache-loader/dist/cjs.js","mtime":1617788517390},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/vue-loader/lib/index.js","mtime":1617788568833}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBldmVudEJ1cyBmcm9tICcuLi9ldmVudEJ1cyc7Ci8vaW1wb3J0IHsgZXh0ZW50IH0gZnJvbSAnZDMnCi8vaW1wb3J0IGVjaGFydHMgZnJvbSAnZWNoYXJ0cy9saWIvZWNoYXJ0cyc7Ci8vaW1wb3J0ICdlY2hhcnRzL2xpYi9jaGFydC9saW5lJwppbXBvcnQgKiBhcyBkMyBmcm9tICdkMyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnTWFwJywKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgcGxheWVySW5mbzogW10sCiAgICAgICAgICAgIGRhdGE6IFs5OSw3MSw3OCwyNSwzNiw5Ml0sCiAgICAgICAgICAgIGxpbmU6ICcnCiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBpbml0TWFwKCkgewogICAgICAgICAgICBldmVudEJ1cy4kb24oJ3NlbGVjdFBsYXllckluZm8nLCh7cGxheWVySW5mb30pPT57CiAgICAgICAgICAgICAgICB0aGlzLnBsYXllckluZm89cGxheWVySW5mbwogICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLnBsYXllckluZm8ubmFtZV96aCk7CiAgICAgICAgICAgICAgICB0aGlzLmRyYXcodGhpcy5wbGF5ZXJJbmZvKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfSwKICAgICAgICBnZXRTY2FsZXMoKSB7CiAgICAgICAgICAgIGNvbnN0IHggPSBkMy5zY2FsZVRpbWUoKS5yYW5nZShbMCwgNDMwXSk7CiAgICAgICAgICAgIGNvbnN0IHkgPSBkMy5zY2FsZUxpbmVhcigpLnJhbmdlKFsyMTAsIDBdKTsKICAgICAgICAgICAgZDMuYXhpc0xlZnQoKS5zY2FsZSh4KTsKICAgICAgICAgICAgZDMuYXhpc0JvdHRvbSgpLnNjYWxlKHkpOwogICAgICAgICAgICB4LmRvbWFpbihkMy5leHRlbnQodGhpcy5kYXRhLCAoZCwgaSkgPT4gaSkpOwogICAgICAgICAgICB5LmRvbWFpbihbMCwgZDMubWF4KHRoaXMuZGF0YSwgZCA9PiBkKV0pOwogICAgICAgICAgICByZXR1cm4geyB4LCB5IH07CiAgICAgICAgfSwKICAgICAgICBkcmF3KGRhdGExID0gIiIpewogICAgICAgICAgICAvL2NvbnNvbGUubG9nKCJhYWFkZnNmZGFzIikKICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YTEubmFtZV96aCk7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGExLm1hdGNoX2xpc3QubGVuZ3RoKQogICAgICAgICAgICB2YXIgVGltZUxpc3Q9W10KICAgICAgICAgICAgdmFyIFNjb3JlTGlzdD1bXQogICAgICAgICAgICB2YXIgdGVtcD0wOwoKICAgICAgICAgICAgZm9yKHZhciBpPTA7aTxkYXRhMS5tYXRjaF9saXN0Lmxlbmd0aDtpKyspewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coIui/m+WFpeW+queOryIpCiAgICAgICAgICAgICAgICBUaW1lTGlzdFtpXT1kYXRhMS5tYXRjaF9saXN0W2ldLm1hdGNoX3RpbWUKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFRpbWVMaXN0W2ldKQogICAgICAgICAgICAgICAgaWYoZGF0YTEubWF0Y2hfbGlzdFtpXS5teV9zY29yZT09bnVsbCl7ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgU2NvcmVMaXN0W2ldPXRlbXA7CiAgICAgICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBTY29yZUxpc3RbaV09ZGF0YTEubWF0Y2hfbGlzdFtpXS5teV9zY29yZQogICAgICAgICAgICAgICAgY29uc29sZS5sb2coU2NvcmVMaXN0W2ldKQogICAgICAgICAgICAgICAgdGVtcD1TY29yZUxpc3RbaV0KCiAgICAgICAgICAgIH0KICAgICAgICAgICAgY29uc3Qgc2NhbGUgPSB0aGlzLmdldFNjYWxlcygpOwogICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhMS5uYW1lX2NoKTsKICAgICAgICAgICAgY29uc3QgcGF0aCA9IGQzLmxpbmUoKQogICAgICAgICAgICAgICAgLngoKGQsIGkpID0+IHNjYWxlLngoaSkpCiAgICAgICAgICAgICAgICAueShkID0+IHNjYWxlLnkoZCkpOwogICAgICAgICAgICB0aGlzLmxpbmUgPSBwYXRoKHRoaXMuZGF0YSk7CiAgICAgICAgfQogICAgfSwKICAgIG1vdW50ZWQoKSB7CiAgICAgICAgdGhpcy5pbml0TWFwKCk7CiAgICB9LAogICAgYmVmb3JlRGVzdHJveSgpIHsKICAgIH0KfQo="},{"version":3,"sources":["aaa.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"aaa.vue","sourceRoot":"src/page/comparison/components","sourcesContent":["<template>\n    <div class=\"lines-map-container\">\n        <svg width=\"100%\" height=\"100%\">\n            <g style=\"transform: translate(0,10px);\">\n                <path :d=\"line\" />\n            </g>\n        </svg>\n    </div>\n</template>\n\n<script>\n    import eventBus from '../eventBus';\n    //import { extent } from 'd3'\n    //import echarts from 'echarts/lib/echarts';\n    //import 'echarts/lib/chart/line'\n    import * as d3 from 'd3';\n\n    export default {\n        name: 'Map',\n        data() {\n            return {\n                playerInfo: [],\n                data: [99,71,78,25,36,92],\n                line: ''\n            }\n        },\n        methods: {\n            initMap() {\n                eventBus.$on('selectPlayerInfo',({playerInfo})=>{\n                    this.playerInfo=playerInfo\n                    //console.log(this.playerInfo.name_zh);\n                    this.draw(this.playerInfo);\n                });\n            },\n            getScales() {\n                const x = d3.scaleTime().range([0, 430]);\n                const y = d3.scaleLinear().range([210, 0]);\n                d3.axisLeft().scale(x);\n                d3.axisBottom().scale(y);\n                x.domain(d3.extent(this.data, (d, i) => i));\n                y.domain([0, d3.max(this.data, d => d)]);\n                return { x, y };\n            },\n            draw(data1 = \"\"){\n                //console.log(\"aaadfsfdas\")\n                console.log(data1.name_zh);\n                console.log(data1.match_list.length)\n                var TimeList=[]\n                var ScoreList=[]\n                var temp=0;\n\n                for(var i=0;i<data1.match_list.length;i++){\n                    console.log(\"进入循环\")\n                    TimeList[i]=data1.match_list[i].match_time\n                    console.log(TimeList[i])\n                    if(data1.match_list[i].my_score==null){                        \n                        ScoreList[i]=temp;\n                        continue;\n                    }\n                    ScoreList[i]=data1.match_list[i].my_score\n                    console.log(ScoreList[i])\n                    temp=ScoreList[i]\n\n                }\n                const scale = this.getScales();\n                console.log(data1.name_ch);\n                const path = d3.line()\n                    .x((d, i) => scale.x(i))\n                    .y(d => scale.y(d));\n                this.line = path(this.data);\n            }\n        },\n        mounted() {\n            this.initMap();\n        },\n        beforeDestroy() {\n        }\n    }\n</script>\n\n<style lang=\"less\">\n    .lines-map-container {\n        position: relative;\n        padding: 0;\n        margin: 0;\n        width: 100%;\n    }\n    .svg{\n        margin: 25px;\n    }\n    .path{\n        fill: none;\n        stroke: #76BF8A;\n        stroke-width: 3px;\n    }\n</style>"]}]}