{"remainingRequest":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/yujiahao/Downloads/visual_work/SZ-COVID-19/src/page/pc/components/list.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/src/page/pc/components/list.vue","mtime":1617781888091},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/css-loader/dist/cjs.js","mtime":1617788566541},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1617788568833},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/postcss-loader/src/index.js","mtime":1617788568393},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/less-loader/dist/cjs.js","mtime":1617788599304},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/cache-loader/dist/cjs.js","mtime":1617788517390},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/vue-loader/lib/index.js","mtime":1617788568833}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudGFibGUtY29udGFpbmVyewogICAgaGVpZ2h0OiAxMDAlOwp9Ci5lbC10YWJsZXsKICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7CiAgICBjb2xvcjogIzg2OWVhNyAhaW1wb3J0YW50OwogICAgLmVsLXRhYmxlX19ib2R5LXdyYXBwZXIgewogICAgICAgIC8vIG92ZXJmbG93OiB2aXNpYmxlOwogICAgfQogICAgdGhlYWR7CiAgICAgICAgY29sb3I6ICM5N2M5ZWYgIWltcG9ydGFudDsKICAgIH0KICAgIHRyewogICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCkgIWltcG9ydGFudDsKICAgICAgICB0aHsKICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwKSAhaW1wb3J0YW50OwogICAgICAgICAgICBib3JkZXI6IG5vbmUgIWltcG9ydGFudDsKICAgICAgICB9CiAgICAgICAgdGR7CiAgICAgICAgICAgIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50OwogICAgICAgIH0KICAgICAgICAmOmhvdmVyewogICAgICAgICAgICB0ZHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCkgIWltcG9ydGFudDsKICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICB9CiAgICB9CiAgICAmOjpiZWZvcmV7CiAgICAgICAgY29udGVudDogbm9uZTsKICAgIH0KICAgIC5zY2F0dGVyLWNoYXJ0IHsKICAgICAgICAuY2VsbCB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgICAgICBvdmVyZmxvdzogdmlzaWJsZTsKICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"list.vue","sourceRoot":"src/page/pc/components","sourcesContent":["<template>\n    <div class=\"table-container\" ref=\"container\">\n        <el-table\n            :data=\"data\"\n            :height=\"height\"\n        >\n            <el-table-column\n                prop=\"name\"\n                label=\"地区\"\n                min-width=\"15%\"\n            />\n            <el-table-column\n                prop=\"now\"\n                label=\"现有\"\n                min-width=\"15%\"\n            />\n            <el-table-column\n                prop=\"acc\"\n                label=\"累计\"\n                min-width=\"15%\"\n            />\n            <el-table-column\n                prop=\"chart\"\n                label=\"趋势\"\n                min-width=\"50%\"\n                class-name=\"scatter-chart\"\n            />\n        </el-table>\n    </div>\n    \n</template>\n\n<script>\n    import _ from 'lodash'\n    import PartJSON from '@/data/part'\n    import Scatter from './scatter'\n    import { extent } from 'd3'\n\n    export default {\n        name: 'List',\n        data() {\n            return {\n                data: [],\n                height: 200,\n            }\n        },\n        methods: {\n            initData() {\n                const nameObj = {\n                    ns: '南山',\n                    gm: '光明',\n                    dp: '大鹏',\n                    ft: '福田',\n                    lg: '龙岗',\n                    yt: '盐田',\n                    ba: '宝安',\n                    ps: '坪山',\n                    lh_u: '罗湖', \n                    lh_ua: '龙华',\n                    qt: '其他',\n                }\n\n                const final = _.chain(nameObj)\n                    .keys()\n                    .reduce((obj, d) => {\n                        const dataArr = PartJSON.filter(d => d.jzsj === '24时')\n                        .map((d1, i, arr) => {\n                            const addCount = i === arr.length - 1\n                                ? Number(d1[d])\n                                : Number(d1[d]) - Number(arr[i + 1][d]);\n\n                            return {\n                                addCount,\n                                count: Number(d1[d]),\n                                time: d1.jzrq,\n                            }\n                        });\n                        obj[d] = {\n                            name: nameObj[d],\n                            data: dataArr,\n                            id: d,\n                            acc: dataArr[0].count,\n                            now: 0,\n                        }\n                        return obj;\n                    }, {})\n                    .values()\n                    .value();\n\n                const dataArr = final\n                    .map(d => d.data)\n                    .flat()\n                    .map(d => d.addCount);\n                _.forIn(final, d => {\n                    d.chart = <Scatter\n                        data={d.data}\n                        extent = {extent(dataArr)}\n                        id={d.id}\n                    />\n                });\n                this.data = final\n            }\n        },\n        mounted() {\n            this.$nextTick(() => {\n                this.height = this.$refs.container.offsetHeight\n            })\n            this.initData()\n        }\n    }\n</script>\n\n<style lang=\"less\">\n    .table-container{\n        height: 100%;\n    }\n    .el-table{\n        background-color: rgba(0, 0, 0, 0);\n        color: #869ea7 !important;\n        .el-table__body-wrapper {\n            // overflow: visible;\n        }\n        thead{\n            color: #97c9ef !important;\n        }\n        tr{\n            background-color: rgba(0, 0, 0, 0) !important;\n            th{\n                background-color: rgba(0, 0, 0, 0) !important;\n                border: none !important;\n            }\n            td{\n                border: none !important;\n            }\n            &:hover{\n                td{\n                    background-color: rgba(0, 0, 0, 0) !important;\n                }\n                \n            }\n        }\n        &::before{\n            content: none;\n        }\n        .scatter-chart {\n            .cell {\n                width: 100%;\n                overflow: visible;\n            }\n        }\n    }\n</style>"]}]}