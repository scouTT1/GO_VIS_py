{"remainingRequest":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/yujiahao/Downloads/visual_work/SZ-COVID-19/src/page/comparison/components/heatmap.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/src/page/comparison/components/heatmap.vue","mtime":1618921752519},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/css-loader/dist/cjs.js","mtime":1617788566541},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1617788568833},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/postcss-loader/src/index.js","mtime":1617788568393},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/less-loader/dist/cjs.js","mtime":1617788599304},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/cache-loader/dist/cjs.js","mtime":1617788517390},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/vue-loader/lib/index.js","mtime":1617788568833}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5oZWF0bWFwewogICAgd2lkdGg6IDEwMCU7CiAgICBoZWlnaHQ6IDEwMCU7CiAgICAuYnRuewogICAgICAgIGZsb2F0OiByaWdodDsKICAgICAgICAuZWwtZHJvcGRvd24gewogICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOwogICAgICAgIH0KICAgICAgICAuZWwtZHJvcGRvd24gKyAuZWwtZHJvcGRvd24gewogICAgICAgICAgICBtYXJnaW4tbGVmdDogMTVweDsKICAgICAgICB9CiAgICAgICAgLmVsLWljb24tYXJyb3ctZG93biB7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDsKICAgICAgICB9CiAgICB9CiAgICAubWFwX3Jvd3sKICAgICAgICB3aWR0aDogODAlOwogICAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdzsKICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgICAgLnNtYWxsX2JveF9yb3d7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgICAgICBoZWlnaHQ6IDEwMCU7CiAgICAgICAgfQogICAgfQogICAgLm1hcF9jb2x7CiAgICAgICAgaGVpZ2h0OiA4MCU7CiAgICAgICAgd2lkdGg6IDUlOwogICAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICAgICAgICAuc21hbGxfYm94X2NvbHsKICAgICAgICAgICAgd2lkdGg6IDEwMCU7CiAgICAgICAgICAgIGhlaWdodDogMTAwJTsKICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICAgICAgICB3cml0aW5nLW1vZGU6IHZlcnRpY2FsLWxyOwogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["heatmap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"heatmap.vue","sourceRoot":"src/page/comparison/components","sourcesContent":["<template>\n    <div class=\"heatmap\">\n        <el-dropdown class=\"btn\">\n            <el-button type=\"primary\" size=\"mini\">\n                增<i class=\"el-icon-arrow-down el-icon--right\"></i>\n            </el-button>\n            <template #dropdown>\n                <el-dropdown-menu>\n                    <el-dropdown-item \n                        :key=\"item\"\n                        v-for=\"(item, index) in player_other\"\n                        @click.native=\"handleClick(item,index)\">{{item.name_zh}}\n                    </el-dropdown-item>\n                </el-dropdown-menu>\n            </template>\n        </el-dropdown>\n        <svg></svg>\n        <!--<div class=\"map_row\">\n            <el-tag class=\"small_box_row\" \n                closable\n                v-for=\"(item,index) in player_label\"\n                @close=\"handleChange(item,index)\">{{ item.name_zh }}\n            </el-tag>\n        </div>\n        <div class=\"map_col\">\n            <el-tag class=\"small_box_col\" \n                closable\n                v-for=\"(item,index) in player_label\"\n                @close=\"handleChange(item,index)\">{{ item.name_zh }}\n            </el-tag>\n        </div>-->\n    </div>\n</template>\n\n<script>\n    //import * as d3 from 'd3';\n    //import PlayerData from '@/data/player'\n    export default {\n        name: 'heatmap',\n        components: {},\n        data() {\n            return {\n                playerdata: [],\n                default_num: 3,\n                player_label: [],\n                player_other: [],\n            }\n        },\n        mounted() {\n            //console.log(\"123\");\n            this.initData();\n        },\n        methods: {\n            initData() {\n                /*this.playerdata=PlayerData;\n                for (var i=0; i<this.playerdata.length; i++){\n                    if(i<this.default_num){\n                        this.player_label.push(this.playerdata[i]);\n                    }else{\n                        this.player_other.push(this.playerdata[i]);\n                    }\n                }*/\n\n            },\n            /*\n            draw() {\n                var array_data = [];\n                // 一句话定义了众多变量， 定义了块儿的位置、宽高、小格子的边长等等与布局有关的变量\n                var margin = { top: 50, right: 0, bottom: 100, left: 150 },\n                    width = 960 - margin.left - margin.right,        // 所有格子区域的宽度，即Heatmap的宽度\n                    height = 1830 - margin.top - margin.bottom,\n                    gridSize = Math.floor(width / 24),    // 求地板，即去掉小数部分，width分成24份\n                    legendElementWidth = gridSize * 2,    // 底下长条的长度，是格子边长的两倍\n                    buckets = 9,        // 一共9种颜色级别\n                    colors = [\"#ffffd9\",\"#edf8b1\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#253494\",\"#081d58\"], \n                    // alternatively colorbrewer.YlGnBu[9]\n                    // days = [\"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"],\n                    //times = [\"1a\", \"2a\", \"3a\", \"4a\", \"5a\", \"6a\", \"7a\", \"8a\", \"9a\", \"10a\", \"11a\", \"12a\", \"1p\", \"2p\", \"3p\", \"4p\", \"5p\", \"6p\", \"7p\", \"8p\", \"9p\", \"10p\", \"11p\", \"12p\"];\n                    tests = [\"G\",\"MIN\",\"PTS\",\"FGM\",\"FGA\",\"FGP\",\"FTM\",\"FTA\",\"FTP\",\"3PM\",\"3PA\",\"3PP\",\"ORB\",\"DRB\",\"TRB\",\"AST\",\"STL\",\"BLK\",\"TO\",\"PF\"];\n                    // 函数，读取 CSV 文件\n                d3.csv(\"ball_data.csv\", //function(d) {}, function(error, data) {} );\n          \n                // 每一行的数据\n                    //function(d) {\n                      //  return {\n                        //    day: +d.day,\n                          //  hour: +d.hour,\n                            //value: +d.value\n                        //};\n                    //},\n            \n                    function(error, data) {\n                        //if(error){  \n                          //  console.log(error);  \n                        //}  \n                        //console.log(csvdata);\n                        // colorScale：颜色级别\n                        var colorScale = d3.scale.quantile()        // 按分位数取值，可使每个区域内元素个数相等\n                            .domain([0, buckets - 1, d3.max(data, function (d) { return d.G; })])  // 定义域\n                        // domain([0, n, 数据的最大值]);\n                            .range(colors);    // 值域：是颜色数组，函数的返回值是代表某种颜色的字符串\n              \n                            // 设置chart，svg\n                        var svg = d3.select(\"#chart\").append(\"svg\") // 选择“chart”（就是div），加入一个svg，设置属性跟div一样大\n                            .attr(\"width\", width + margin.left + margin.right)\n                            .attr(\"height\", height + margin.top + margin.bottom)\n                            .append(\"g\")    // 在svg内加入一个g（group组），并设置元素g的显示位置\n                            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n                \n                        // 编辑姓名行\n                        var dayLabels = svg.selectAll(\".nameLabel\")\n                            .data(data)\n                            .enter()    // 为data中每一项创建一个\".dayLabel\"\n                            .append(\"text\")    // 为days中每一项创建一的\".dayLabel\"添加文本，下面全是设置文本的属性\n                            .text(function (d, i) { return data[i].name; })\n                            .attr(\"x\", 0)\n                            .attr(\"y\", function (d, i) { return i * gridSize; })\n                            .style(\"text-anchor\", \"end\")\n                            .attr(\"transform\", \"translate(-6,\" + gridSize / 1.5 + \")\")\n                            .attr(\"class\", function (d, i) { return ((i >= 0 && i <= 4) ? \"nameLabel mono axis axis-workweek\" : \"nameLabel mono axis\"); \n                            });\n     \n                        // 编辑测试项行\n                        var timeLabels = svg.selectAll(\".testLabel\")\n                            .data(tests)\n                            .enter().append(\"text\")\n                            .text(function(d) { return d; })\n                            .attr(\"x\", function(d, i) { return i * gridSize; })\n                            .attr(\"y\", 0)\n                            .style(\"text-anchor\", \"middle\")\n                            .attr(\"transform\", \"translate(\" + gridSize / 2 + \", -6)\")\n                            .attr(\"class\", function(d, i) { \n                                return ((i >= 7 && i <= 16) ? \"testLabel mono axis axis-worktime\" : \"testLabel mono axis\"); });\n              \n                        // 画出格子，暂不涂色，color[0]\n                        for (var i = 0; i < 50; i++){\n                            array_data[i*20] = data[i].G;\n                            array_data[i*20+1] = data[i].MIN;\n                            array_data[i*20+2] = data[i].PTS;\n                            array_data[i*20+3] = data[i].FGM;\n                            array_data[i*20+4] = data[i].FGA;\n                            array_data[i*20+5] = data[i].FGP;\n                            array_data[i*20+6] = data[i].FTM;\n                            array_data[i*20+7] = data[i].FTA;\n                            array_data[i*20+8] = data[i].FTP;\n                            array_data[i*20+9] = data[i].P3PM;\n                            array_data[i*20+10] = data[i].P3PA;\n                            array_data[i*20+11] = data[i].P3PP;\n                            array_data[i*20+12] = data[i].ORB;\n                            array_data[i*20+13] = data[i].DRB;\n                            array_data[i*20+14] = data[i].TRB;\n                            array_data[i*20+15] = data[i].AST;\n                            array_data[i*20+16] = data[i].STL;\n                            array_data[i*20+17] = data[i].BLK;\n                            array_data[i*20+18] = data[i].TO;\n                            array_data[i*20+19] = data[i].PF;\n                        }\n\n                        var heatMap = svg.selectAll(\".score\")\n                            .data(array_data)\n                            .enter()        // 为data中每一项创建一个\".hour\"\n                            .append(\"rect\")\n                            .attr(\"x\", function(d, i){ return (i % 20)*gridSize;})\n                            .attr(\"y\", function(d, i){ return parseInt(i / 20)*gridSize;})\n                            .attr(\"rx\", 6)\n                            .attr(\"ry\", 6)\n                            .attr(\"class\", \"hour bordered\")\n                            .attr(\"width\", gridSize)\n                            .attr(\"height\", gridSize)\n                            .style(\"fill\", \"#FFFFFF\");\n                \n                        // duration(1000) 在1000ns也就是1s内将格子图上色\n                        heatMap.transition().duration(1000)\n                            .style(\"fill\", function(d) { return colorScale(d); });\n                \n                        // 鼠标停留显示value\n                        heatMap.append(\"title\").text(function(d) { return d.G; });\n                  \n                        // legend 是一个有7个组的什么东西，，，\n                        var legend = svg.selectAll(\".legend\")\n                            .data([0].concat(colorScale.quantiles()), function(d) { return d; })    // 由data获得的元素个数为7\n                            .enter().append(\"g\")\n                            .attr(\"class\", \"legend\");\n    \n                        legend.append(\"rect\")\n                            .attr(\"x\", function(d, i) { return legendElementWidth * i; })\n                            .attr(\"y\", height)\n                            .attr(\"width\", legendElementWidth)\n                            .attr(\"height\", gridSize / 2)\n                            .style(\"fill\", function(d, i) { return colors[i]; });\n    \n                        legend.append(\"text\")\n                            .attr(\"class\", \"mono\")\n                            .text(function(d) { return \">= \"+Math.round(d); })\n                            .attr(\"x\", function(d, i) { return legendElementWidth * i; })\n                            .attr(\"y\", height + gridSize);\n                    });\n            },*/\n            handleClick(item,index) {\n                console.log(item,index);\n                this.player_label.push(item);\n                this.player_other.splice(index,1);\n                //this.initData();\n            },\n            handleChange(item,index){\n                console.log(item,index);\n                this.player_label.splice(index,1);\n                this.player_other.push(item);\n            }\n        },\n};\n</script>\n\n<style lang=\"less\">\n    .heatmap{\n        width: 100%;\n        height: 100%;\n        .btn{\n            float: right;\n            .el-dropdown {\n                vertical-align: top;\n            }\n            .el-dropdown + .el-dropdown {\n                margin-left: 15px;\n            }\n            .el-icon-arrow-down {\n                font-size: 12px;\n            }\n        }\n        .map_row{\n            width: 80%;\n            display: flex;\n            flex-direction: row;\n            text-align: center;\n            .small_box_row{\n                width: 100%;\n                height: 100%;\n            }\n        }\n        .map_col{\n            height: 80%;\n            width: 5%;\n            display: flex;\n            flex-direction: column;\n            .small_box_col{\n                width: 100%;\n                height: 100%;\n                text-align: center;\n                writing-mode: vertical-lr;\n            }\n        }\n    }\n</style>"]}]}