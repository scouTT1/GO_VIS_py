{"remainingRequest":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/yujiahao/Downloads/visual_work/SZ-COVID-19/src/page/comparison/components/scatter.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/src/page/comparison/components/scatter.vue","mtime":1617781942000},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/cache-loader/dist/cjs.js","mtime":1617788517390},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/babel-loader/lib/index.js","mtime":1617788517170},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/cache-loader/dist/cjs.js","mtime":1617788517390},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/vue-loader/lib/index.js","mtime":1617788568833}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmltcG9ydCBlY2hhcnRzIGZyb20gJ2VjaGFydHMvbGliL2VjaGFydHMnOwppbXBvcnQgXyBmcm9tICdsb2Rhc2gnOwppbXBvcnQgJ2VjaGFydHMvbGliL2NoYXJ0L3NjYXR0ZXInCmltcG9ydCB7IHNjYWxlTGluZWFyIH0gZnJvbSAnZDMnCgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnU2NhdHRlcicsCiAgICBwcm9wczogWydkYXRhJywgJ2lkJywgJ2V4dGVudCddLAogICAgbWV0aG9kczogewogICAgICAgIGluaXRNYXAoKSB7CiAgICAgICAgICAgIGNvbnN0IHVzZURhdGEgPSBfLmNoYWluKHRoaXMuZGF0YSkKICAgICAgICAgICAgICAgIC5tYXAoZCA9PiBbZC50aW1lLCBkLmFkZENvdW50XSkKICAgICAgICAgICAgICAgIC5yZXZlcnNlKCkKICAgICAgICAgICAgICAgIC5jaHVuaygzKQogICAgICAgICAgICAgICAgLm1hcChkID0+IHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gW2Ake2RbMF1bMF19LSR7Xy5sYXN0KGQpWzBdfWAsIF8uc3VtQnkoZCwgZDEgPT4gZDFbMV0pXSAKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAudmFsdWUoKTsKCiAgICAgICAgICAgIGNvbnN0IHNjYWxlID0gc2NhbGVMaW5lYXIoKQogICAgICAgICAgICAgICAgLmRvbWFpbih0aGlzLmV4dGVudCkKICAgICAgICAgICAgICAgIC5yYW5nZShbMiwgMjBdKQoKICAgICAgICAgICAgY29uc3Qgb3B0aW9uID0gewogICAgICAgICAgICAgICAgc2luZ2xlQXhpczogewogICAgICAgICAgICAgICAgICAgIGhlaWdodDogMCwKICAgICAgICAgICAgICAgICAgICBsZWZ0OiAyNSwKICAgICAgICAgICAgICAgICAgICB0b3A6IDIwLAogICAgICAgICAgICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScsCiAgICAgICAgICAgICAgICAgICAgYm91bmRhcnlHYXA6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgZGF0YTogdXNlRGF0YS5tYXAoZCA9PiBkWzBdKSwKICAgICAgICAgICAgICAgICAgICBheGlzTGFiZWw6IHsKICAgICAgICAgICAgICAgICAgICAgICAgc2hvdzogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBheGlzVGljazogewogICAgICAgICAgICAgICAgICAgICAgICBzaG93OiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHNwbGl0TGluZTogewogICAgICAgICAgICAgICAgICAgICAgICBzaG93OiBmYWxzZSAgCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBheGlzTGluZTogewogICAgICAgICAgICAgICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnZG90dGVkJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJ2dyYXknCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgICAgICAgICAgICBjb25maW5lOiB0cnVlLAogICAgICAgICAgICAgICAgICAgIGZvcm1hdHRlcjogKHtkYXRhfSkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYCR7ZGF0YVswXX08YnIgLz7mlrDlop7noa7or4rkurrmlbDvvJoke2RhdGFbMV19YAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgzMiwgNTcsIDExMiwgLjcpJwogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHNlcmllczogewogICAgICAgICAgICAgICAgICAgIHNpbmdsZUF4aXNJbmRleDogMCwKICAgICAgICAgICAgICAgICAgICBjb29yZGluYXRlU3lzdGVtOiAnc2luZ2xlQXhpcycsCiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3NjYXR0ZXInLAogICAgICAgICAgICAgICAgICAgIGRhdGE6IHVzZURhdGEsCiAgICAgICAgICAgICAgICAgICAgc3ltYm9sU2l6ZTogIGZ1bmN0aW9uKGRhdGFJdGVtKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBkYXRhSXRlbVsxXSA/IHNjYWxlKGRhdGFJdGVtWzFdKSA6IDAKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICAgICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAnI2MyM2UzMicKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfTsKICAgICAgICAgICAgY29uc3QgbXlDaGFydCA9IGVjaGFydHMuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmlkKSk7CiAgICAgICAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKG9wdGlvbik7CiAgICAgICAgfQogICAgfSwKICAgIG1vdW50ZWQoKSB7CiAgICAgICAgc2V0VGltZW91dCh0aGlzLmluaXRNYXApCiAgICB9Cn0K"},{"version":3,"sources":["scatter.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"scatter.vue","sourceRoot":"src/page/comparison/components","sourcesContent":["<template>\n    <div :id=\"id\" class=\"scatterChart\"></div>\n</template>\n\n<script>\n    import echarts from 'echarts/lib/echarts';\n    import _ from 'lodash';\n    import 'echarts/lib/chart/scatter'\n    import { scaleLinear } from 'd3'\n    \n    export default {\n        name: 'Scatter',\n        props: ['data', 'id', 'extent'],\n        methods: {\n            initMap() {\n                const useData = _.chain(this.data)\n                    .map(d => [d.time, d.addCount])\n                    .reverse()\n                    .chunk(3)\n                    .map(d => {\n                        return [`${d[0][0]}-${_.last(d)[0]}`, _.sumBy(d, d1 => d1[1])] \n                    })\n                    .value();\n\n                const scale = scaleLinear()\n                    .domain(this.extent)\n                    .range([2, 20])\n\n                const option = {\n                    singleAxis: {\n                        height: 0,\n                        left: 25,\n                        top: 20,\n                        type: 'category',\n                        boundaryGap: true,\n                        data: useData.map(d => d[0]),\n                        axisLabel: {\n                            show: false,\n                        },\n                        axisTick: {\n                            show: false,\n                        },\n                        splitLine: {\n                            show: false  \n                        },\n                        axisLine: {\n                            lineStyle: {\n                                 type: 'dotted',\n                                 color: 'gray'\n                            },\n                        }\n                    },\n                    tooltip: {\n                        confine: true,\n                        formatter: ({data}) => {\n                            return `${data[0]}<br />新增确诊人数：${data[1]}`\n                        },\n                        backgroundColor: 'rgba(32, 57, 112, .7)'\n                    },\n                    series: {\n                        singleAxisIndex: 0,\n                        coordinateSystem: 'singleAxis',\n                        type: 'scatter',\n                        data: useData,\n                        symbolSize:  function(dataItem) {\n                            return dataItem[1] ? scale(dataItem[1]) : 0\n                        },\n                        itemStyle: {\n                            normal: {\n                                color: '#c23e32'\n                            }\n                        }\n                    }\n                };\n                const myChart = echarts.init(document.getElementById(this.id));\n                myChart.setOption(option);\n            }\n        },\n        mounted() {\n            setTimeout(this.initMap)\n        }\n    }\n</script>\n\n<style lang=\"less\" scoped>\n    .scatterChart{\n        height: 40px;\n        width: 100%;\n    }\n</style>"]}]}