{"remainingRequest":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/yujiahao/Downloads/visual_work/SZ-COVID-19/src/page/information/components/bar.vue?vue&type=style&index=0&id=07afbd14&lang=less&scoped=true&","dependencies":[{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/src/page/information/components/bar.vue","mtime":1617781942000},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/css-loader/dist/cjs.js","mtime":1617788566541},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1617788568833},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/postcss-loader/src/index.js","mtime":1617788568393},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/less-loader/dist/cjs.js","mtime":1617788599304},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/cache-loader/dist/cjs.js","mtime":1617788517390},{"path":"/home/yujiahao/Downloads/visual_work/SZ-COVID-19/node_modules/vue-loader/lib/index.js","mtime":1617788568833}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNiYXJDaGFydHsKICAgIG1hcmdpbi10b3A6IDIwcHg7CiAgICBoZWlnaHQ6IDMwMHB4OwogICAgd2lkdGg6IDEwMCU7Cn0K"},{"version":3,"sources":["bar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6MA;AACA;AACA;AACA;AACA","file":"bar.vue","sourceRoot":"src/page/information/components","sourcesContent":["<template>\n    <div id=\"barChart\">\n    </div>\n</template>\n\n<script>\n    import echarts from 'echarts/lib/echarts';\n    import 'echarts/lib/chart/bar'\n    import 'echarts/lib/chart/pictorialBar'\n    import 'echarts/lib/component/axis'\n    import 'echarts/lib/component/tooltip'\n    import women from '@/assets/woman1.png'\n    import men from '@/assets/man1.png'\n    import womenBg from '@/assets/womanBg1.png'\n    import menBg from '@/assets/manBg1.png'\n    import TrackJSON from '@/data/track' \n    import _ from 'lodash' \n\n    export default {\n        name: 'Bar',\n        methods: {\n            initData() {\n                const data = _.chain(TrackJSON)\n                    .reduce((obj, d) => {\n                        const key =`${d.nlRange}_${d.xb}`;\n                        obj[key] = {\n                            sex: d.xb,\n                            nlRange: d.nlRange,\n                            count: obj[key] ? obj[key].count + 1 : 1,\n                        }\n                        return obj;\n                    }, {})\n                    .values()\n                    .value();\n                const menData = data\n                    .filter(d => d.sex === '男');\n                const womanData = data\n                    .filter(d => d.sex === '女')\n                womanData.forEach(d => d.count = 0 - d.count);\n                return [menData, womanData];\n            },\n            calcualteLabel() {\n                return _.chain(TrackJSON)\n                    .map('nlRange')\n                    .uniq()\n                    .sort((b, a) => {\n                        const arr = [a, b].map(d1 => Number(d1.split('~')[0]));\n                        return arr[0] - arr[1];\n                    })\n                    .value();\n            },\n            initChart() {\n                const symbleSize = 16;\n                const [manData, womanData] = this.initData();\n                const labelData = this.calcualteLabel();\n                const manCount = labelData.map(d => {\n                    return manData\n                        .find(d1 => d1.nlRange === d)\n                        .count\n                })\n                const womanCount = labelData.map(d => {\n                    return womanData\n                        .find(d1 => d1.nlRange === d)\n                        .count\n                })\n                const option = {\n                    xAxis: [{\n                        type: 'value',\n                        gridIndex: 0,\n                        axisTick:{show: false},\n                        axisLabel : {show: false},\n                        axisLine: { show: false},\n                        splitLine: {\n                            show: false\n                        }\n                    }, {\n                        type: 'value',\n                        gridIndex: 1,\n                        axisTick:{show: false}, //是否显示刻度\n                        axisLine: {show: false},\n                        axisLabel : {show: false},\n                        splitLine: {show: false}\n                    }],\n                    yAxis: [{\n                            type: 'category',\n                            gridIndex: 0,\n                            inverse: true,\n                            data: labelData,\n                            axisTick:{show:false},\n                            axisLabel : {show:false},\n                            axisLine: {show: false}\n                        },{\n                            type: 'category',\n                            gridIndex: 1,\n                            inverse: true,\n                            data: labelData,\n                            axisTick:{show:false},\n                            axisLine: {show: false},\n                            axisLabel: {\n                                color: 'red',\n                                align: 'center',\n                                margin: 40,\n                            }\n                        }\n                    ],\n                    tooltip: {\n                        trigger: \"item\",\n                         formatter: function(a){\n                            return  a.marker + a.seriesName + '<br />' + \n                                    a.name + ': ' + Math.abs(a.value);\n                        }\n                    },\n                    grid: [\n                        {\n                            width: '40%',\n                            top: \"0%\",\n                            bottom: \"0%\",\n                            left: '5%',\n                            gridIndex: 0,\n                            containLabel: true\n                        }, {\n                            width: '50%',\n                            left: '45%',\n                            top: \"0%\",\n                            bottom: \"0%\",\n                            gridIndex: 1,\n                            containLabel: true\n                    }],\n                    series: [\n                        {\n                            tooltip: {\n                                show: false\n                            },\n                            z: 4,\n                            gridIndex: 0,\n                            type: \"pictorialBar\",\n                            symbolSize: symbleSize,\n                            symbolRepeat: \"fixed\",\n                            data: womanCount.map(() => ({\n                                value: -100,\n                                symbol: 'image://'+womenBg\n                            }))\n                        },\n                       {\n                            z: 6,\n                            name: '女性',\n                            gridIndex: 0,\n                            type: \"pictorialBar\",\n                            symbolSize: symbleSize,\n                            animation: true,\n                            symbolRepeat: \"fixed\",\n                            symbolClip: true,\n                            symbolPosition: \"start\",\n                            symbolOffset: [0, 0],\n                            data: womanCount.map(d => ({\n                                value: d,\n                                symbol: 'image://'+women\n                            })),\n                        },\n                        {\n                            tooltip: {\n                                show: false\n                            },\n                            z: 4,\n                            xAxisIndex: 1,\n                            yAxisIndex: 1,\n                            type: \"pictorialBar\",\n                            symbolSize: symbleSize,\n                            symbolRepeat: \"fixed\",\n                            data: manCount.map(() => ({\n                                value: 100,\n                                symbol: 'image://'+menBg\n                            }))\n                        },\n                        {\n                            z: 6,\n                            name: '男性',\n                            type: \"pictorialBar\",\n                            symbolSize: symbleSize,\n                            xAxisIndex: 1,\n                            yAxisIndex: 1,\n                            animation: true,\n                            symbolRepeat: \"fixed\",\n                            symbolClip: true,\n                            symbolPosition: \"start\",\n                            symbolOffset: [0, 0],\n                            data: manCount.map(d => ({\n                                value: d,\n                                symbol: 'image://'+men\n                            })),\n                        },\n                    ]\n                };\n                const myChart = echarts.init(document.getElementById('barChart'));\n\n                myChart.setOption(option)\n            }\n        },\n        mounted() {\n            this.initChart();\n        }\n    }\n</script>\n\n<style lang=\"less\" scoped>\n    #barChart{\n        margin-top: 20px;\n        height: 300px;\n        width: 100%;\n    }\n</style>"]}]}